// Code generated by gen-svg; DO NOT EDIT.

package html

import (
	"strings"
)

// SvgAttrs holds the attributes for the svg SVG element
type SvgAttrs struct {
	GlobalAttrs
	Height              string
	PreserveAspectRatio string
	ViewBox             string
	Width               string
	X                   string
	Y                   string
	Fill                string
	Stroke              string
	StrokeWidth         string
	StrokeLinecap       string
	StrokeLinejoin      string
	Xmlns               string
}

// SvgArg interface for svg element arguments
type SvgArg interface {
	apply(*SvgAttrs, *[]Component)
}

// defaultSvgAttrs creates default attributes for svg
func defaultSvgAttrs() *SvgAttrs {
	return &SvgAttrs{
		GlobalAttrs: GlobalAttrs{},
	}
}

// Svg creates an SVG svg element
func Svg(args ...SvgArg) Node {
	a := defaultSvgAttrs()
	var kids []Component
	for _, ar := range args {
		ar.apply(a, &kids)
	}
	return Node{
		Tag:   "svg",
		Attrs: a,
		Kids:  kids,
	}
}

// Global applies global SVG attributes to svg
func (g Global) apply(a *SvgAttrs, _ *[]Component) {
	g.Do(&a.GlobalAttrs)
}

// HeightOpt applies to
func (o HeightOpt) apply(a *SvgAttrs, _ *[]Component) {
	a.Height = o.v
}

// PreserveAspectRatioOpt applies to
func (o PreserveAspectRatioOpt) apply(a *SvgAttrs, _ *[]Component) {
	a.PreserveAspectRatio = o.v
}

// ViewBoxOpt applies to
func (o ViewBoxOpt) apply(a *SvgAttrs, _ *[]Component) {
	a.ViewBox = o.v
}

// WidthOpt applies to
func (o WidthOpt) apply(a *SvgAttrs, _ *[]Component) {
	a.Width = o.v
}

// XOpt applies to
func (o XOpt) apply(a *SvgAttrs, _ *[]Component) {
	a.X = o.v
}

// YOpt applies to
func (o YOpt) apply(a *SvgAttrs, _ *[]Component) {
	a.Y = o.v
}

// FillOpt applies to Svg
func (o FillOpt) apply(a *SvgAttrs, _ *[]Component) {
	a.Fill = o.v
}

// StrokeOpt applies to Svg
func (o StrokeOpt) apply(a *SvgAttrs, _ *[]Component) {
	a.Stroke = o.v
}

// StrokeWidthOpt applies to Svg
func (o StrokeWidthOpt) apply(a *SvgAttrs, _ *[]Component) {
	a.StrokeWidth = o.v
}

// StrokeLinecapOpt applies to Svg
func (o StrokeLinecapOpt) apply(a *SvgAttrs, _ *[]Component) {
	a.StrokeLinecap = o.v
}

// StrokeLinejoinOpt applies to Svg
func (o StrokeLinejoinOpt) apply(a *SvgAttrs, _ *[]Component) {
	a.StrokeLinejoin = o.v
}

// XmlnsOpt applies to Svg
func (o XmlnsOpt) apply(a *SvgAttrs, _ *[]Component) {
	a.Xmlns = o.v
}

// WriteAttrs writes the SVG attributes to the string builder
func (a *SvgAttrs) WriteAttrs(sb *strings.Builder) {
	WriteGlobal(sb, &a.GlobalAttrs)
	if a.Height != "" {
		Attr(sb, "height", a.Height)
	}
	if a.PreserveAspectRatio != "" {
		Attr(sb, "preserveAspectRatio", a.PreserveAspectRatio)
	}
	if a.ViewBox != "" {
		Attr(sb, "viewBox", a.ViewBox)
	}
	if a.Width != "" {
		Attr(sb, "width", a.Width)
	}
	if a.X != "" {
		Attr(sb, "x", a.X)
	}
	if a.Y != "" {
		Attr(sb, "y", a.Y)
	}
	if a.Fill != "" {
		Attr(sb, "fill", a.Fill)
	}
	if a.Stroke != "" {
		Attr(sb, "stroke", a.Stroke)
	}
	if a.StrokeWidth != "" {
		Attr(sb, "stroke-width", a.StrokeWidth)
	}
	if a.StrokeLinecap != "" {
		Attr(sb, "stroke-linecap", a.StrokeLinecap)
	}
	if a.StrokeLinejoin != "" {
		Attr(sb, "stroke-linejoin", a.StrokeLinejoin)
	}
	if a.Xmlns != "" {
		Attr(sb, "xmlns", a.Xmlns)
	}
}
