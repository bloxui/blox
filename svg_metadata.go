// Code generated by gen-svg; DO NOT EDIT.

package html

import (
	"strings"
)

// SvgMetadataAttrs holds the attributes for the metadata SVG element
type SvgMetadataAttrs struct {
	GlobalAttrs
	RequiredExtensions string
	RequiredFeatures   string
	SystemLanguage     string
}

// SvgMetadataArg interface for metadata element arguments
type SvgMetadataArg interface {
	applyMetadata(*SvgMetadataAttrs, *[]Component)
}

// defaultSvgMetadataAttrs creates default attributes for metadata
func defaultSvgMetadataAttrs() *SvgMetadataAttrs {
	return &SvgMetadataAttrs{
		GlobalAttrs: GlobalAttrs{},
	}
}

// SvgMetadata creates an SVG metadata element
func SvgMetadata(args ...SvgMetadataArg) Node {
	a := defaultSvgMetadataAttrs()
	var kids []Component
	for _, ar := range args {
		ar.applyMetadata(a, &kids)
	}
	return Node{
		Tag:   "metadata",
		Attrs: a,
		Kids:  kids,
	}
}

// Global applies global SVG attributes to metadata
func (g Global) applyMetadata(a *SvgMetadataAttrs, _ *[]Component) {
	g.Do(&a.GlobalAttrs)
}

// RequiredExtensionsOpt applies to Metadata
func (o RequiredExtensionsOpt) applyMetadata(a *SvgMetadataAttrs, _ *[]Component) {
	a.RequiredExtensions = o.v
}

// RequiredFeaturesOpt applies to Metadata
func (o RequiredFeaturesOpt) applyMetadata(a *SvgMetadataAttrs, _ *[]Component) {
	a.RequiredFeatures = o.v
}

// SystemLanguageOpt applies to Metadata
func (o SystemLanguageOpt) applyMetadata(a *SvgMetadataAttrs, _ *[]Component) {
	a.SystemLanguage = o.v
}

// WriteAttrs writes the SVG attributes to the string builder
func (a *SvgMetadataAttrs) WriteAttrs(sb *strings.Builder) {
	WriteGlobal(sb, &a.GlobalAttrs)
	if a.RequiredExtensions != "" {
		Attr(sb, "requiredExtensions", a.RequiredExtensions)
	}
	if a.RequiredFeatures != "" {
		Attr(sb, "requiredFeatures", a.RequiredFeatures)
	}
	if a.SystemLanguage != "" {
		Attr(sb, "systemLanguage", a.SystemLanguage)
	}
}
