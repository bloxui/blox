// Code generated by gen-svg; DO NOT EDIT.

package html

import (
	"strings"
)

// SvgFeDiffuseLightingAttrs holds the attributes for the feDiffuseLighting SVG element
type SvgFeDiffuseLightingAttrs struct {
	GlobalAttrs
	DiffuseConstant  string
	In               string
	KernelUnitLength string
	SurfaceScale     string
}

// SvgFeDiffuseLightingArg interface for feDiffuseLighting element arguments
type SvgFeDiffuseLightingArg interface {
	applyFeDiffuseLighting(*SvgFeDiffuseLightingAttrs, *[]Component)
}

// defaultSvgFeDiffuseLightingAttrs creates default attributes for feDiffuseLighting
func defaultSvgFeDiffuseLightingAttrs() *SvgFeDiffuseLightingAttrs {
	return &SvgFeDiffuseLightingAttrs{
		GlobalAttrs: GlobalAttrs{},
	}
}

// SvgFeDiffuseLighting creates an SVG feDiffuseLighting element
func SvgFeDiffuseLighting(args ...SvgFeDiffuseLightingArg) Node {
	a := defaultSvgFeDiffuseLightingAttrs()
	var kids []Component
	for _, ar := range args {
		ar.applyFeDiffuseLighting(a, &kids)
	}
	return Node{
		Tag:   "feDiffuseLighting",
		Attrs: a,
		Kids:  kids,
	}
}

// Global applies global SVG attributes to feDiffuseLighting
func (g Global) applyFeDiffuseLighting(a *SvgFeDiffuseLightingAttrs, _ *[]Component) {
	g.Do(&a.GlobalAttrs)
}

// DiffuseConstantOpt applies to FeDiffuseLighting
func (o DiffuseConstantOpt) applyFeDiffuseLighting(a *SvgFeDiffuseLightingAttrs, _ *[]Component) {
	a.DiffuseConstant = o.v
}

// InOpt applies to FeDiffuseLighting
func (o InOpt) applyFeDiffuseLighting(a *SvgFeDiffuseLightingAttrs, _ *[]Component) {
	a.In = o.v
}

// KernelUnitLengthOpt applies to FeDiffuseLighting
func (o KernelUnitLengthOpt) applyFeDiffuseLighting(a *SvgFeDiffuseLightingAttrs, _ *[]Component) {
	a.KernelUnitLength = o.v
}

// SurfaceScaleOpt applies to FeDiffuseLighting
func (o SurfaceScaleOpt) applyFeDiffuseLighting(a *SvgFeDiffuseLightingAttrs, _ *[]Component) {
	a.SurfaceScale = o.v
}

// WriteAttrs writes the SVG attributes to the string builder
func (a *SvgFeDiffuseLightingAttrs) WriteAttrs(sb *strings.Builder) {
	WriteGlobal(sb, &a.GlobalAttrs)
	if a.DiffuseConstant != "" {
		Attr(sb, "diffuseConstant", a.DiffuseConstant)
	}
	if a.In != "" {
		Attr(sb, "in", a.In)
	}
	if a.KernelUnitLength != "" {
		Attr(sb, "kernelUnitLength", a.KernelUnitLength)
	}
	if a.SurfaceScale != "" {
		Attr(sb, "surfaceScale", a.SurfaceScale)
	}
}
