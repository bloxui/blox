// Code generated by gen-svg; DO NOT EDIT.

package html

import (
	"strings"
)

// LinearGradientAttrs holds the attributes for the linearGradient SVG element
type LinearGradientAttrs struct {
	SvgGlobal         SvgGlobalAttrs
	GradientTransform string
	GradientUnits     string
	SpreadMethod      string
	X1                string
	X2                string
	Y1                string
	Y2                string
}

// LinearGradientArg interface for linearGradient element arguments
type LinearGradientArg interface {
	ApplyLinearGradient(*LinearGradientAttrs, *[]html.Component)
}

// defaultLinearGradientAttrs creates default attributes for linearGradient
func defaultLinearGradientAttrs() *LinearGradientAttrs {
	return &LinearGradientAttrs{
		SvgGlobal: SvgGlobalAttrs{},
	}
}

// LinearGradient creates an SVG linearGradient element
func LinearGradient(args ...LinearGradientArg) html.Node {
	a := defaultLinearGradientAttrs()
	var kids []html.Component
	for _, ar := range args {
		ar.ApplyLinearGradient(a, &kids)
	}
	return html.Node{
		Tag:   "linearGradient",
		Attrs: a,
		Kids:  kids,
	}
}

// Global applies global SVG attributes to linearGradient
func (g Global) ApplyLinearGradient(a *LinearGradientAttrs, _ *[]html.Component) {
	g.do(&a.SvgGlobal)
}

// GradientTransformOpt applies to LinearGradient
func (o GradientTransformOpt) ApplyLinearGradient(a *LinearGradientAttrs, _ *[]html.Component) {
	a.GradientTransform = o.v
}

// GradientUnitsOpt applies to LinearGradient
func (o GradientUnitsOpt) ApplyLinearGradient(a *LinearGradientAttrs, _ *[]html.Component) {
	a.GradientUnits = o.v
}

// SpreadMethodOpt applies to LinearGradient
func (o SpreadMethodOpt) ApplyLinearGradient(a *LinearGradientAttrs, _ *[]html.Component) {
	a.SpreadMethod = o.v
}

// X1Opt applies to LinearGradient
func (o X1Opt) ApplyLinearGradient(a *LinearGradientAttrs, _ *[]html.Component) {
	a.X1 = o.v
}

// X2Opt applies to LinearGradient
func (o X2Opt) ApplyLinearGradient(a *LinearGradientAttrs, _ *[]html.Component) {
	a.X2 = o.v
}

// Y1Opt applies to LinearGradient
func (o Y1Opt) ApplyLinearGradient(a *LinearGradientAttrs, _ *[]html.Component) {
	a.Y1 = o.v
}

// Y2Opt applies to LinearGradient
func (o Y2Opt) ApplyLinearGradient(a *LinearGradientAttrs, _ *[]html.Component) {
	a.Y2 = o.v
}

// WriteAttrs writes the SVG attributes to the string builder
func (a *LinearGradientAttrs) WriteAttrs(sb *strings.Builder) {
	WriteSvgGlobal(sb, &a.SvgGlobal)
	if a.GradientTransform != "" {
		SvgAttr(sb, "gradientTransform", a.GradientTransform)
	}
	if a.GradientUnits != "" {
		SvgAttr(sb, "gradientUnits", a.GradientUnits)
	}
	if a.SpreadMethod != "" {
		SvgAttr(sb, "spreadMethod", a.SpreadMethod)
	}
	if a.X1 != "" {
		SvgAttr(sb, "x1", a.X1)
	}
	if a.X2 != "" {
		SvgAttr(sb, "x2", a.X2)
	}
	if a.Y1 != "" {
		SvgAttr(sb, "y1", a.Y1)
	}
	if a.Y2 != "" {
		SvgAttr(sb, "y2", a.Y2)
	}
}
