// Code generated by gen-svg; DO NOT EDIT.

package svg

import (
	"strings"

	"github.com/plainkit/html"
)

// SvgGlobalAttrs represents global SVG attributes that can be applied to any SVG element
type SvgGlobalAttrs struct {
	// Embed HTML global attributes for cross-compatibility
	html.GlobalAttrs

	// SVG-specific global attributes (excluding HTML globals to prevent duplicates)
	Fill      string
	Stroke    string
	Transform string
}

// Global represents a global SVG attribute option
type Global struct {
	fn func(*SvgGlobalAttrs)
}

// do applies the global attribute option
func (g Global) do(attrs *SvgGlobalAttrs) {
	g.fn(attrs)
}

// AFill sets the fill attribute
func AFill(v string) Global {
	return Global{func(g *SvgGlobalAttrs) { g.Fill = v }}
}

// AStroke sets the stroke attribute
func AStroke(v string) Global {
	return Global{func(g *SvgGlobalAttrs) { g.Stroke = v }}
}

// ATransform sets the transform attribute
func ATransform(v string) Global {
	return Global{func(g *SvgGlobalAttrs) { g.Transform = v }}
}

// WriteSvgGlobal writes global SVG attributes to the string builder
func WriteSvgGlobal(sb *strings.Builder, attrs *SvgGlobalAttrs) {
	// Write embedded HTML global attributes first
	html.WriteGlobal(sb, &attrs.GlobalAttrs)

	// Write SVG-specific global attributes
	if attrs.Fill != "" {
		SvgAttr(sb, "fill", attrs.Fill)
	}
	if attrs.Stroke != "" {
		SvgAttr(sb, "stroke", attrs.Stroke)
	}
	if attrs.Transform != "" {
		SvgAttr(sb, "transform", attrs.Transform)
	}
}

// SvgAttr writes a standard SVG attribute
func SvgAttr(sb *strings.Builder, name, value string) {
	sb.WriteString(" ")
	sb.WriteString(name)
	sb.WriteString("=\"")
	sb.WriteString(value)
	sb.WriteString("\"")
}

// SvgBoolAttr writes a boolean SVG attribute
func SvgBoolAttr(sb *strings.Builder, name string) {
	sb.WriteString(" ")
	sb.WriteString(name)
}
