// Code generated by gen-svg; DO NOT EDIT.

package svg

import (
	"github.com/plainkit/html"
)

// This file provides the bridge for html.Global to work with SVG elements.
// It uses the public Do() method from html.Global to apply HTML global attributes to SVG elements.

// applyA makes html.Global work with SVG a element by implementing AArg interface
func (g html.Global) applyA(attrs *AAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyAnimate makes html.Global work with SVG animate element by implementing AnimateArg interface
func (g html.Global) applyAnimate(attrs *AnimateAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyAnimateMotion makes html.Global work with SVG animateMotion element by implementing AnimateMotionArg interface
func (g html.Global) applyAnimateMotion(attrs *AnimateMotionAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyAnimateTransform makes html.Global work with SVG animateTransform element by implementing AnimateTransformArg interface
func (g html.Global) applyAnimateTransform(attrs *AnimateTransformAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyCircle makes html.Global work with SVG circle element by implementing CircleArg interface
func (g html.Global) applyCircle(attrs *CircleAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyClipPath makes html.Global work with SVG clipPath element by implementing ClipPathArg interface
func (g html.Global) applyClipPath(attrs *ClipPathAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyDefs makes html.Global work with SVG defs element by implementing DefsArg interface
func (g html.Global) applyDefs(attrs *DefsAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyDesc makes html.Global work with SVG desc element by implementing DescArg interface
func (g html.Global) applyDesc(attrs *DescAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyEllipse makes html.Global work with SVG ellipse element by implementing EllipseArg interface
func (g html.Global) applyEllipse(attrs *EllipseAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyFeBlend makes html.Global work with SVG feBlend element by implementing FeBlendArg interface
func (g html.Global) applyFeBlend(attrs *FeBlendAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyFeColorMatrix makes html.Global work with SVG feColorMatrix element by implementing FeColorMatrixArg interface
func (g html.Global) applyFeColorMatrix(attrs *FeColorMatrixAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyFeComponentTransfer makes html.Global work with SVG feComponentTransfer element by implementing FeComponentTransferArg interface
func (g html.Global) applyFeComponentTransfer(attrs *FeComponentTransferAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyFeComposite makes html.Global work with SVG feComposite element by implementing FeCompositeArg interface
func (g html.Global) applyFeComposite(attrs *FeCompositeAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyFeConvolveMatrix makes html.Global work with SVG feConvolveMatrix element by implementing FeConvolveMatrixArg interface
func (g html.Global) applyFeConvolveMatrix(attrs *FeConvolveMatrixAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyFeDiffuseLighting makes html.Global work with SVG feDiffuseLighting element by implementing FeDiffuseLightingArg interface
func (g html.Global) applyFeDiffuseLighting(attrs *FeDiffuseLightingAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyFeDisplacementMap makes html.Global work with SVG feDisplacementMap element by implementing FeDisplacementMapArg interface
func (g html.Global) applyFeDisplacementMap(attrs *FeDisplacementMapAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyFeDistantLight makes html.Global work with SVG feDistantLight element by implementing FeDistantLightArg interface
func (g html.Global) applyFeDistantLight(attrs *FeDistantLightAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyFeDropShadow makes html.Global work with SVG feDropShadow element by implementing FeDropShadowArg interface
func (g html.Global) applyFeDropShadow(attrs *FeDropShadowAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyFeFlood makes html.Global work with SVG feFlood element by implementing FeFloodArg interface
func (g html.Global) applyFeFlood(attrs *FeFloodAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyFeFuncA makes html.Global work with SVG feFuncA element by implementing FeFuncAArg interface
func (g html.Global) applyFeFuncA(attrs *FeFuncAAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyFeFuncB makes html.Global work with SVG feFuncB element by implementing FeFuncBArg interface
func (g html.Global) applyFeFuncB(attrs *FeFuncBAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyFeFuncG makes html.Global work with SVG feFuncG element by implementing FeFuncGArg interface
func (g html.Global) applyFeFuncG(attrs *FeFuncGAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyFeFuncR makes html.Global work with SVG feFuncR element by implementing FeFuncRArg interface
func (g html.Global) applyFeFuncR(attrs *FeFuncRAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyFeGaussianBlur makes html.Global work with SVG feGaussianBlur element by implementing FeGaussianBlurArg interface
func (g html.Global) applyFeGaussianBlur(attrs *FeGaussianBlurAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyFeImage makes html.Global work with SVG feImage element by implementing FeImageArg interface
func (g html.Global) applyFeImage(attrs *FeImageAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyFeMerge makes html.Global work with SVG feMerge element by implementing FeMergeArg interface
func (g html.Global) applyFeMerge(attrs *FeMergeAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyFeMergeNode makes html.Global work with SVG feMergeNode element by implementing FeMergeNodeArg interface
func (g html.Global) applyFeMergeNode(attrs *FeMergeNodeAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyFeMorphology makes html.Global work with SVG feMorphology element by implementing FeMorphologyArg interface
func (g html.Global) applyFeMorphology(attrs *FeMorphologyAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyFeOffset makes html.Global work with SVG feOffset element by implementing FeOffsetArg interface
func (g html.Global) applyFeOffset(attrs *FeOffsetAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyFePointLight makes html.Global work with SVG fePointLight element by implementing FePointLightArg interface
func (g html.Global) applyFePointLight(attrs *FePointLightAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyFeSpecularLighting makes html.Global work with SVG feSpecularLighting element by implementing FeSpecularLightingArg interface
func (g html.Global) applyFeSpecularLighting(attrs *FeSpecularLightingAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyFeSpotLight makes html.Global work with SVG feSpotLight element by implementing FeSpotLightArg interface
func (g html.Global) applyFeSpotLight(attrs *FeSpotLightAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyFeTile makes html.Global work with SVG feTile element by implementing FeTileArg interface
func (g html.Global) applyFeTile(attrs *FeTileAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyFeTurbulence makes html.Global work with SVG feTurbulence element by implementing FeTurbulenceArg interface
func (g html.Global) applyFeTurbulence(attrs *FeTurbulenceAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyFilter makes html.Global work with SVG filter element by implementing FilterArg interface
func (g html.Global) applyFilter(attrs *FilterAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyForeignObject makes html.Global work with SVG foreignObject element by implementing ForeignObjectArg interface
func (g html.Global) applyForeignObject(attrs *ForeignObjectAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyG makes html.Global work with SVG g element by implementing GArg interface
func (g html.Global) applyG(attrs *GAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyImage makes html.Global work with SVG image element by implementing ImageArg interface
func (g html.Global) applyImage(attrs *ImageAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyLine makes html.Global work with SVG line element by implementing LineArg interface
func (g html.Global) applyLine(attrs *LineAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyLinearGradient makes html.Global work with SVG linearGradient element by implementing LinearGradientArg interface
func (g html.Global) applyLinearGradient(attrs *LinearGradientAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyMarker makes html.Global work with SVG marker element by implementing MarkerArg interface
func (g html.Global) applyMarker(attrs *MarkerAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyMask makes html.Global work with SVG mask element by implementing MaskArg interface
func (g html.Global) applyMask(attrs *MaskAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyMetadata makes html.Global work with SVG metadata element by implementing MetadataArg interface
func (g html.Global) applyMetadata(attrs *MetadataAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyMpath makes html.Global work with SVG mpath element by implementing MpathArg interface
func (g html.Global) applyMpath(attrs *MpathAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyPath makes html.Global work with SVG path element by implementing PathArg interface
func (g html.Global) applyPath(attrs *PathAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyPattern makes html.Global work with SVG pattern element by implementing PatternArg interface
func (g html.Global) applyPattern(attrs *PatternAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyPolygon makes html.Global work with SVG polygon element by implementing PolygonArg interface
func (g html.Global) applyPolygon(attrs *PolygonAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyPolyline makes html.Global work with SVG polyline element by implementing PolylineArg interface
func (g html.Global) applyPolyline(attrs *PolylineAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyRadialGradient makes html.Global work with SVG radialGradient element by implementing RadialGradientArg interface
func (g html.Global) applyRadialGradient(attrs *RadialGradientAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyRect makes html.Global work with SVG rect element by implementing RectArg interface
func (g html.Global) applyRect(attrs *RectAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyScript makes html.Global work with SVG script element by implementing ScriptArg interface
func (g html.Global) applyScript(attrs *ScriptAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applySet makes html.Global work with SVG set element by implementing SetArg interface
func (g html.Global) applySet(attrs *SetAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyStop makes html.Global work with SVG stop element by implementing StopArg interface
func (g html.Global) applyStop(attrs *StopAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyStyle makes html.Global work with SVG style element by implementing StyleArg interface
func (g html.Global) applyStyle(attrs *StyleAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applySvg makes html.Global work with SVG svg element by implementing SvgArg interface
func (g html.Global) applySvg(attrs *SvgAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applySwitch makes html.Global work with SVG switch element by implementing SwitchArg interface
func (g html.Global) applySwitch(attrs *SwitchAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applySymbol makes html.Global work with SVG symbol element by implementing SymbolArg interface
func (g html.Global) applySymbol(attrs *SymbolAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyText makes html.Global work with SVG text element by implementing TextArg interface
func (g html.Global) applyText(attrs *TextAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyTextPath makes html.Global work with SVG textPath element by implementing TextPathArg interface
func (g html.Global) applyTextPath(attrs *TextPathAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyTitle makes html.Global work with SVG title element by implementing TitleArg interface
func (g html.Global) applyTitle(attrs *TitleAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyTspan makes html.Global work with SVG tspan element by implementing TspanArg interface
func (g html.Global) applyTspan(attrs *TspanAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyUse makes html.Global work with SVG use element by implementing UseArg interface
func (g html.Global) applyUse(attrs *UseAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}

// applyView makes html.Global work with SVG view element by implementing ViewArg interface
func (g html.Global) applyView(attrs *ViewAttrs, _ *[]html.Component) {
	g.Do(&attrs.SvgGlobal.GlobalAttrs)
}
