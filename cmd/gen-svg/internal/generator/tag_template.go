package generator

const tagTemplate = `// Code generated by gen-svg; DO NOT EDIT.
package svg

import (
	"strings"

	"github.com/plainkit/html"
)

// {{.StructName}} holds the attributes for the {{.Name}} SVG element
type {{.StructName}} struct {
	html.GlobalAttrs{{range .Attributes}}
	{{.Field}} {{.GoType}}{{end}}
}

{{if .Void}}
// {{.Title}} creates an SVG {{.Name}} element (self-closing)
func {{.Title}}(attrs {{.StructName}}) html.Node {
	return html.Node{
		Tag:   "{{.Name}}",
		Attrs: &attrs,
		Void:  true,
	}
}
{{else}}
// {{.Title}} creates an SVG {{.Name}} element
func {{.Title}}(attrs {{.StructName}}, children ...html.Component) html.Node {
	return html.Node{
		Tag:   "{{.Name}}",
		Attrs: &attrs,
		Kids:  children,
	}
}
{{end}}

// writeAttrs writes the HTML attributes to the string builder
func (a *{{.StructName}}) writeAttrs(sb *strings.Builder) {
	html.WriteGlobal(sb, &a.GlobalAttrs){{range .Attributes}}
	{{if eq .Type "bool"}}if a.{{.Field}} {
		html.BoolAttr(sb, "{{.Attr}}")
	}{{else}}if a.{{.Field}} != "" {
		html.Attr(sb, "{{.Attr}}", a.{{.Field}})
	}{{end}}{{end}}
}
`
