// Code generated by gen-svg; DO NOT EDIT.
package svg

import (
	"strings"

	"github.com/plainkit/html"
)

type FeSpotLightAttrs struct {
	html.GlobalAttrs
	LimitingConeAngle string
	PointsAtX         string
	PointsAtY         string
	PointsAtZ         string
	SpecularExponent  string
	X                 string
	Y                 string
	Z                 string
}

func FeSpotLight(attrs FeSpotLightAttrs) html.Node {
	return html.Node{Tag: "feSpotLight", Attrs: &attrs, Void: true}
}

func (a *FeSpotLightAttrs) writeAttrs(sb *strings.Builder) {
	html.WriteGlobal(sb, &a.GlobalAttrs)
	if a.LimitingConeAngle != "" {
		html.Attr(sb, "limitingConeAngle", a.LimitingConeAngle)
	}
	if a.PointsAtX != "" {
		html.Attr(sb, "pointsAtX", a.PointsAtX)
	}
	if a.PointsAtY != "" {
		html.Attr(sb, "pointsAtY", a.PointsAtY)
	}
	if a.PointsAtZ != "" {
		html.Attr(sb, "pointsAtZ", a.PointsAtZ)
	}
	if a.SpecularExponent != "" {
		html.Attr(sb, "specularExponent", a.SpecularExponent)
	}
	if a.X != "" {
		html.Attr(sb, "x", a.X)
	}
	if a.Y != "" {
		html.Attr(sb, "y", a.Y)
	}
	if a.Z != "" {
		html.Attr(sb, "z", a.Z)
	}
}
