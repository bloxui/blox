// Code generated by gen-svg; DO NOT EDIT.

package svg

import (
	"strings"

	"github.com/plainkit/html"
)

// AltGlyphItemAttrs holds the attributes for the altGlyphItem SVG element
type AltGlyphItemAttrs struct {
	SvgGlobal SvgGlobalAttrs
}

// AltGlyphItemArg interface for altGlyphItem element arguments
type AltGlyphItemArg interface {
	applyAltGlyphItem(*AltGlyphItemAttrs, *[]html.Component)
}

// defaultAltGlyphItemAttrs creates default attributes for altGlyphItem
func defaultAltGlyphItemAttrs() *AltGlyphItemAttrs {
	return &AltGlyphItemAttrs{
		SvgGlobal: SvgGlobalAttrs{},
	}
}

// AltGlyphItem creates an SVG altGlyphItem element
func AltGlyphItem(args ...AltGlyphItemArg) html.Node {
	a := defaultAltGlyphItemAttrs()
	var kids []html.Component
	for _, ar := range args {
		ar.applyAltGlyphItem(a, &kids)
	}
	return html.Node{
		Tag:   "altGlyphItem",
		Attrs: a,
		Kids:  kids,
	}
}

// Global applies global SVG attributes to altGlyphItem
func (g Global) applyAltGlyphItem(a *AltGlyphItemAttrs, _ *[]html.Component) {
	g.do(&a.SvgGlobal)
}

// writeAttrs writes the SVG attributes to the string builder
func (a *AltGlyphItemAttrs) writeAttrs(sb *strings.Builder) {
	WriteSvgGlobal(sb, &a.SvgGlobal)
}
