// Code generated by gen-svg; DO NOT EDIT.

package svg

import (
	"strings"

	"github.com/plainkit/html"
)

// SetAttrs holds the attributes for the set SVG element
type SetAttrs struct {
	SvgGlobal     SvgGlobalAttrs
	AttributeName string
	AttributeType string
	Begin         string
	Dur           string
	End           string
	Max           string
	Min           string
	RepeatCount   string
	RepeatDur     string
	Restart       string
	To            string
}

// SetArg interface for set element arguments
type SetArg interface {
	applySet(*SetAttrs, *[]html.Component)
}

// defaultSetAttrs creates default attributes for set
func defaultSetAttrs() *SetAttrs {
	return &SetAttrs{
		SvgGlobal: SvgGlobalAttrs{},
	}
}

// Set creates an SVG set element
func Set(args ...SetArg) html.Node {
	a := defaultSetAttrs()
	var kids []html.Component
	for _, ar := range args {
		ar.applySet(a, &kids)
	}
	return html.Node{
		Tag:   "set",
		Attrs: a,
		Kids:  kids,
	}
}

// Global applies global SVG attributes to set
func (g Global) applySet(a *SetAttrs, _ *[]html.Component) {
	g.do(&a.SvgGlobal)
}

// AttributeNameOpt applies to Set
func (o AttributeNameOpt) applySet(a *SetAttrs, _ *[]html.Component) {
	a.AttributeName = o.v
}

// AttributeTypeOpt applies to Set
func (o AttributeTypeOpt) applySet(a *SetAttrs, _ *[]html.Component) {
	a.AttributeType = o.v
}

// BeginOpt applies to Set
func (o BeginOpt) applySet(a *SetAttrs, _ *[]html.Component) {
	a.Begin = o.v
}

// DurOpt applies to Set
func (o DurOpt) applySet(a *SetAttrs, _ *[]html.Component) {
	a.Dur = o.v
}

// EndOpt applies to Set
func (o EndOpt) applySet(a *SetAttrs, _ *[]html.Component) {
	a.End = o.v
}

// MaxOpt applies to Set
func (o MaxOpt) applySet(a *SetAttrs, _ *[]html.Component) {
	a.Max = o.v
}

// MinOpt applies to Set
func (o MinOpt) applySet(a *SetAttrs, _ *[]html.Component) {
	a.Min = o.v
}

// RepeatCountOpt applies to Set
func (o RepeatCountOpt) applySet(a *SetAttrs, _ *[]html.Component) {
	a.RepeatCount = o.v
}

// RepeatDurOpt applies to Set
func (o RepeatDurOpt) applySet(a *SetAttrs, _ *[]html.Component) {
	a.RepeatDur = o.v
}

// RestartOpt applies to Set
func (o RestartOpt) applySet(a *SetAttrs, _ *[]html.Component) {
	a.Restart = o.v
}

// ToOpt applies to Set
func (o ToOpt) applySet(a *SetAttrs, _ *[]html.Component) {
	a.To = o.v
}

// writeAttrs writes the SVG attributes to the string builder
func (a *SetAttrs) writeAttrs(sb *strings.Builder) {
	WriteSvgGlobal(sb, &a.SvgGlobal)
	if a.AttributeName != "" {
		SvgAttr(sb, "attributeName", a.AttributeName)
	}
	if a.AttributeType != "" {
		SvgAttr(sb, "attributeType", a.AttributeType)
	}
	if a.Begin != "" {
		SvgAttr(sb, "begin", a.Begin)
	}
	if a.Dur != "" {
		SvgAttr(sb, "dur", a.Dur)
	}
	if a.End != "" {
		SvgAttr(sb, "end", a.End)
	}
	if a.Max != "" {
		SvgAttr(sb, "max", a.Max)
	}
	if a.Min != "" {
		SvgAttr(sb, "min", a.Min)
	}
	if a.RepeatCount != "" {
		SvgAttr(sb, "repeatCount", a.RepeatCount)
	}
	if a.RepeatDur != "" {
		SvgAttr(sb, "repeatDur", a.RepeatDur)
	}
	if a.Restart != "" {
		SvgAttr(sb, "restart", a.Restart)
	}
	if a.To != "" {
		SvgAttr(sb, "to", a.To)
	}
}
