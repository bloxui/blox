// Code generated by gen-svg; DO NOT EDIT.

package svg

import (
	"strings"

	"github.com/plainkit/html"
)

// ListenerAttrs holds the attributes for the listener SVG element
type ListenerAttrs struct {
	SvgGlobal     SvgGlobalAttrs
	DefaultAction string
	Event         string
	Handler       string
	Observer      string
	Phase         string
	Propagate     string
	Target        string
}

// ListenerArg interface for listener element arguments
type ListenerArg interface {
	applyListener(*ListenerAttrs, *[]html.Component)
}

// defaultListenerAttrs creates default attributes for listener
func defaultListenerAttrs() *ListenerAttrs {
	return &ListenerAttrs{
		SvgGlobal: SvgGlobalAttrs{},
	}
}

// Listener creates an SVG listener element
func Listener(args ...ListenerArg) html.Node {
	a := defaultListenerAttrs()
	var kids []html.Component
	for _, ar := range args {
		ar.applyListener(a, &kids)
	}
	return html.Node{
		Tag:   "listener",
		Attrs: a,
		Kids:  kids,
	}
}

// Global applies global SVG attributes to listener
func (g Global) applyListener(a *ListenerAttrs, _ *[]html.Component) {
	g.do(&a.SvgGlobal)
}

// DefaultActionOpt applies to Listener
func (o DefaultActionOpt) applyListener(a *ListenerAttrs, _ *[]html.Component) {
	a.DefaultAction = o.v
}

// EventOpt applies to Listener
func (o EventOpt) applyListener(a *ListenerAttrs, _ *[]html.Component) {
	a.Event = o.v
}

// HandlerOpt applies to Listener
func (o HandlerOpt) applyListener(a *ListenerAttrs, _ *[]html.Component) {
	a.Handler = o.v
}

// ObserverOpt applies to Listener
func (o ObserverOpt) applyListener(a *ListenerAttrs, _ *[]html.Component) {
	a.Observer = o.v
}

// PhaseOpt applies to Listener
func (o PhaseOpt) applyListener(a *ListenerAttrs, _ *[]html.Component) {
	a.Phase = o.v
}

// PropagateOpt applies to Listener
func (o PropagateOpt) applyListener(a *ListenerAttrs, _ *[]html.Component) {
	a.Propagate = o.v
}

// TargetOpt applies to Listener
func (o TargetOpt) applyListener(a *ListenerAttrs, _ *[]html.Component) {
	a.Target = o.v
}

// writeAttrs writes the SVG attributes to the string builder
func (a *ListenerAttrs) writeAttrs(sb *strings.Builder) {
	WriteSvgGlobal(sb, &a.SvgGlobal)
	if a.DefaultAction != "" {
		SvgAttr(sb, "defaultAction", a.DefaultAction)
	}
	if a.Event != "" {
		SvgAttr(sb, "event", a.Event)
	}
	if a.Handler != "" {
		SvgAttr(sb, "handler", a.Handler)
	}
	if a.Observer != "" {
		SvgAttr(sb, "observer", a.Observer)
	}
	if a.Phase != "" {
		SvgAttr(sb, "phase", a.Phase)
	}
	if a.Propagate != "" {
		SvgAttr(sb, "propagate", a.Propagate)
	}
	if a.Target != "" {
		SvgAttr(sb, "target", a.Target)
	}
}
