// Code generated by gen-svg; DO NOT EDIT.
package svg

import (
	"strings"

	"github.com/plainkit/html"
)

type ListenerAttrs struct {
	html.GlobalAttrs
	DefaultAction string
	Event         string
	Handler       string
	Observer      string
	Phase         string
	Propagate     string
	Target        string
}

func Listener(attrs ListenerAttrs, children ...html.Component) html.Node {
	return html.Node{Tag: "listener", Attrs: &attrs, Kids: children}
}

func (a *ListenerAttrs) writeAttrs(sb *strings.Builder) {
	html.WriteGlobal(sb, &a.GlobalAttrs)
	if a.DefaultAction != "" {
		html.Attr(sb, "defaultAction", a.DefaultAction)
	}
	if a.Event != "" {
		html.Attr(sb, "event", a.Event)
	}
	if a.Handler != "" {
		html.Attr(sb, "handler", a.Handler)
	}
	if a.Observer != "" {
		html.Attr(sb, "observer", a.Observer)
	}
	if a.Phase != "" {
		html.Attr(sb, "phase", a.Phase)
	}
	if a.Propagate != "" {
		html.Attr(sb, "propagate", a.Propagate)
	}
	if a.Target != "" {
		html.Attr(sb, "target", a.Target)
	}
}
