// Code generated by gen-svg; DO NOT EDIT.

package svg

import (
	"strings"

	"github.com/plainkit/html"
)

// PolygonAttrs holds the attributes for the polygon SVG element
type PolygonAttrs struct {
	SvgGlobal SvgGlobalAttrs
	Points    string
}

// PolygonArg interface for polygon element arguments
type PolygonArg interface {
	applyPolygon(*PolygonAttrs, *[]html.Component)
}

// defaultPolygonAttrs creates default attributes for polygon
func defaultPolygonAttrs() *PolygonAttrs {
	return &PolygonAttrs{
		SvgGlobal: SvgGlobalAttrs{},
	}
}

// Polygon creates an SVG polygon element (self-closing)
func Polygon(args ...PolygonArg) html.Node {
	a := defaultPolygonAttrs()
	var kids []html.Component
	for _, ar := range args {
		ar.applyPolygon(a, &kids)
	}
	return html.Node{
		Tag:   "polygon",
		Attrs: a,
		Void:  true,
	}
}

// Global applies global SVG attributes to polygon
func (g Global) applyPolygon(a *PolygonAttrs, _ *[]html.Component) {
	g.do(&a.SvgGlobal)
}

// PointsOpt applies to Polygon
func (o PointsOpt) applyPolygon(a *PolygonAttrs, _ *[]html.Component) {
	a.Points = o.v
}

// WriteAttrs writes the SVG attributes to the string builder
func (a *PolygonAttrs) WriteAttrs(sb *strings.Builder) {
	WriteSvgGlobal(sb, &a.SvgGlobal)
	if a.Points != "" {
		SvgAttr(sb, "points", a.Points)
	}
}
