// Code generated by gen-svg; DO NOT EDIT.

package svg

import (
	"strings"

	"github.com/plainkit/html"
)

// FeSpecularLightingAttrs holds the attributes for the feSpecularLighting SVG element
type FeSpecularLightingAttrs struct {
	SvgGlobal        SvgGlobalAttrs
	In               string
	KernelUnitLength string
	SpecularConstant string
	SpecularExponent string
	SurfaceScale     string
}

// FeSpecularLightingArg interface for feSpecularLighting element arguments
type FeSpecularLightingArg interface {
	applyFeSpecularLighting(*FeSpecularLightingAttrs, *[]html.Component)
}

// defaultFeSpecularLightingAttrs creates default attributes for feSpecularLighting
func defaultFeSpecularLightingAttrs() *FeSpecularLightingAttrs {
	return &FeSpecularLightingAttrs{
		SvgGlobal: SvgGlobalAttrs{},
	}
}

// FeSpecularLighting creates an SVG feSpecularLighting element
func FeSpecularLighting(args ...FeSpecularLightingArg) html.Node {
	a := defaultFeSpecularLightingAttrs()
	var kids []html.Component
	for _, ar := range args {
		ar.applyFeSpecularLighting(a, &kids)
	}
	return html.Node{
		Tag:   "feSpecularLighting",
		Attrs: a,
		Kids:  kids,
	}
}

// Global applies global SVG attributes to feSpecularLighting
func (g Global) applyFeSpecularLighting(a *FeSpecularLightingAttrs, _ *[]html.Component) {
	g.do(&a.SvgGlobal)
}

// InOpt applies to FeSpecularLighting
func (o InOpt) applyFeSpecularLighting(a *FeSpecularLightingAttrs, _ *[]html.Component) {
	a.In = o.v
}

// KernelUnitLengthOpt applies to FeSpecularLighting
func (o KernelUnitLengthOpt) applyFeSpecularLighting(a *FeSpecularLightingAttrs, _ *[]html.Component) {
	a.KernelUnitLength = o.v
}

// SpecularConstantOpt applies to FeSpecularLighting
func (o SpecularConstantOpt) applyFeSpecularLighting(a *FeSpecularLightingAttrs, _ *[]html.Component) {
	a.SpecularConstant = o.v
}

// SpecularExponentOpt applies to FeSpecularLighting
func (o SpecularExponentOpt) applyFeSpecularLighting(a *FeSpecularLightingAttrs, _ *[]html.Component) {
	a.SpecularExponent = o.v
}

// SurfaceScaleOpt applies to FeSpecularLighting
func (o SurfaceScaleOpt) applyFeSpecularLighting(a *FeSpecularLightingAttrs, _ *[]html.Component) {
	a.SurfaceScale = o.v
}

// WriteAttrs writes the SVG attributes to the string builder
func (a *FeSpecularLightingAttrs) WriteAttrs(sb *strings.Builder) {
	WriteSvgGlobal(sb, &a.SvgGlobal)
	if a.In != "" {
		SvgAttr(sb, "in", a.In)
	}
	if a.KernelUnitLength != "" {
		SvgAttr(sb, "kernelUnitLength", a.KernelUnitLength)
	}
	if a.SpecularConstant != "" {
		SvgAttr(sb, "specularConstant", a.SpecularConstant)
	}
	if a.SpecularExponent != "" {
		SvgAttr(sb, "specularExponent", a.SpecularExponent)
	}
	if a.SurfaceScale != "" {
		SvgAttr(sb, "surfaceScale", a.SurfaceScale)
	}
}
