// Code generated by gen-svg; DO NOT EDIT.

package svg

import (
	"strings"

	"github.com/plainkit/html"
)

// AltGlyphDefAttrs holds the attributes for the altGlyphDef SVG element
type AltGlyphDefAttrs struct {
	SvgGlobal SvgGlobalAttrs
}

// AltGlyphDefArg interface for altGlyphDef element arguments
type AltGlyphDefArg interface {
	applyAltGlyphDef(*AltGlyphDefAttrs, *[]html.Component)
}

// defaultAltGlyphDefAttrs creates default attributes for altGlyphDef
func defaultAltGlyphDefAttrs() *AltGlyphDefAttrs {
	return &AltGlyphDefAttrs{
		SvgGlobal: SvgGlobalAttrs{},
	}
}

// AltGlyphDef creates an SVG altGlyphDef element
func AltGlyphDef(args ...AltGlyphDefArg) html.Node {
	a := defaultAltGlyphDefAttrs()
	var kids []html.Component
	for _, ar := range args {
		ar.applyAltGlyphDef(a, &kids)
	}
	return html.Node{
		Tag:   "altGlyphDef",
		Attrs: a,
		Kids:  kids,
	}
}

// Global applies global SVG attributes to altGlyphDef
func (g Global) applyAltGlyphDef(a *AltGlyphDefAttrs, _ *[]html.Component) {
	g.do(&a.SvgGlobal)
}

// writeAttrs writes the SVG attributes to the string builder
func (a *AltGlyphDefAttrs) writeAttrs(sb *strings.Builder) {
	WriteSvgGlobal(sb, &a.SvgGlobal)
}
