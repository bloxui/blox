// Code generated by gen-svg; DO NOT EDIT.
package svg

import (
	"strings"

	"github.com/plainkit/html"
)

// FeFuncBAttrs holds the attributes for the feFuncB SVG element
type FeFuncBAttrs struct {
	html.GlobalAttrs
	Amplitude   string
	Exponent    string
	Intercept   string
	Offset      string
	Slope       string
	TableValues string
	Type        string
}

// FeFuncB creates an SVG feFuncB element (self-closing)
func FeFuncB(attrs FeFuncBAttrs) html.Node {
	return html.Node{
		Tag:   "feFuncB",
		Attrs: &attrs,
		Void:  true,
	}
}

// writeAttrs writes the HTML attributes to the string builder
func (a *FeFuncBAttrs) writeAttrs(sb *strings.Builder) {
	html.WriteGlobal(sb, &a.GlobalAttrs)
	if a.Amplitude != "" {
		html.Attr(sb, "amplitude", a.Amplitude)
	}
	if a.Exponent != "" {
		html.Attr(sb, "exponent", a.Exponent)
	}
	if a.Intercept != "" {
		html.Attr(sb, "intercept", a.Intercept)
	}
	if a.Offset != "" {
		html.Attr(sb, "offset", a.Offset)
	}
	if a.Slope != "" {
		html.Attr(sb, "slope", a.Slope)
	}
	if a.TableValues != "" {
		html.Attr(sb, "tableValues", a.TableValues)
	}
	if a.Type != "" {
		html.Attr(sb, "type", a.Type)
	}
}
