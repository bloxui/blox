// Code generated by gen-svg; DO NOT EDIT.
package svg

import (
	"strings"

	"github.com/plainkit/html"
)

// ViewAttrs holds the attributes for the view SVG element
type ViewAttrs struct {
	html.GlobalAttrs
	ExternalResourcesRequired string
	PreserveAspectRatio       string
	ViewBox                   string
	ViewTarget                string
	ZoomAndPan                string
}

// View creates an SVG view element
func View(attrs ViewAttrs, children ...html.Component) html.Node {
	return html.Node{
		Tag:   "view",
		Attrs: &attrs,
		Kids:  children,
	}
}

// writeAttrs writes the HTML attributes to the string builder
func (a *ViewAttrs) writeAttrs(sb *strings.Builder) {
	html.WriteGlobal(sb, &a.GlobalAttrs)
	if a.ExternalResourcesRequired != "" {
		html.Attr(sb, "externalResourcesRequired", a.ExternalResourcesRequired)
	}
	if a.PreserveAspectRatio != "" {
		html.Attr(sb, "preserveAspectRatio", a.PreserveAspectRatio)
	}
	if a.ViewBox != "" {
		html.Attr(sb, "viewBox", a.ViewBox)
	}
	if a.ViewTarget != "" {
		html.Attr(sb, "viewTarget", a.ViewTarget)
	}
	if a.ZoomAndPan != "" {
		html.Attr(sb, "zoomAndPan", a.ZoomAndPan)
	}
}
