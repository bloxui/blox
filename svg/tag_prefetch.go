// Code generated by gen-svg; DO NOT EDIT.

package svg

import (
	"strings"

	"github.com/plainkit/html"
)

// PrefetchAttrs holds the attributes for the prefetch SVG element
type PrefetchAttrs struct {
	SvgGlobal              SvgGlobalAttrs
	Bandwidth              string
	MediaCharacterEncoding string
	MediaContentEncodings  string
	MediaSize              string
	MediaTime              string
}

// PrefetchArg interface for prefetch element arguments
type PrefetchArg interface {
	applyPrefetch(*PrefetchAttrs, *[]html.Component)
}

// defaultPrefetchAttrs creates default attributes for prefetch
func defaultPrefetchAttrs() *PrefetchAttrs {
	return &PrefetchAttrs{
		SvgGlobal: SvgGlobalAttrs{},
	}
}

// Prefetch creates an SVG prefetch element
func Prefetch(args ...PrefetchArg) html.Node {
	a := defaultPrefetchAttrs()
	var kids []html.Component
	for _, ar := range args {
		ar.applyPrefetch(a, &kids)
	}
	return html.Node{
		Tag:   "prefetch",
		Attrs: a,
		Kids:  kids,
	}
}

// Global applies global SVG attributes to prefetch
func (g Global) applyPrefetch(a *PrefetchAttrs, _ *[]html.Component) {
	g.do(&a.SvgGlobal)
}

// BandwidthOpt applies to Prefetch
func (o BandwidthOpt) applyPrefetch(a *PrefetchAttrs, _ *[]html.Component) {
	a.Bandwidth = o.v
}

// MediaCharacterEncodingOpt applies to Prefetch
func (o MediaCharacterEncodingOpt) applyPrefetch(a *PrefetchAttrs, _ *[]html.Component) {
	a.MediaCharacterEncoding = o.v
}

// MediaContentEncodingsOpt applies to Prefetch
func (o MediaContentEncodingsOpt) applyPrefetch(a *PrefetchAttrs, _ *[]html.Component) {
	a.MediaContentEncodings = o.v
}

// MediaSizeOpt applies to Prefetch
func (o MediaSizeOpt) applyPrefetch(a *PrefetchAttrs, _ *[]html.Component) {
	a.MediaSize = o.v
}

// MediaTimeOpt applies to Prefetch
func (o MediaTimeOpt) applyPrefetch(a *PrefetchAttrs, _ *[]html.Component) {
	a.MediaTime = o.v
}

// writeAttrs writes the SVG attributes to the string builder
func (a *PrefetchAttrs) writeAttrs(sb *strings.Builder) {
	WriteSvgGlobal(sb, &a.SvgGlobal)
	if a.Bandwidth != "" {
		SvgAttr(sb, "bandwidth", a.Bandwidth)
	}
	if a.MediaCharacterEncoding != "" {
		SvgAttr(sb, "mediaCharacterEncoding", a.MediaCharacterEncoding)
	}
	if a.MediaContentEncodings != "" {
		SvgAttr(sb, "mediaContentEncodings", a.MediaContentEncodings)
	}
	if a.MediaSize != "" {
		SvgAttr(sb, "mediaSize", a.MediaSize)
	}
	if a.MediaTime != "" {
		SvgAttr(sb, "mediaTime", a.MediaTime)
	}
}
