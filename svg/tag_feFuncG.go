// Code generated by gen-svg; DO NOT EDIT.

package svg

import (
	"strings"

	"github.com/plainkit/html"
)

// FeFuncGAttrs holds the attributes for the feFuncG SVG element
type FeFuncGAttrs struct {
	SvgGlobal   SvgGlobalAttrs
	Amplitude   string
	Exponent    string
	Intercept   string
	Offset      string
	Slope       string
	TableValues string
	Type        string
}

// FeFuncGArg interface for feFuncG element arguments
type FeFuncGArg interface {
	applyFeFuncG(*FeFuncGAttrs, *[]html.Component)
}

// defaultFeFuncGAttrs creates default attributes for feFuncG
func defaultFeFuncGAttrs() *FeFuncGAttrs {
	return &FeFuncGAttrs{
		SvgGlobal: SvgGlobalAttrs{},
	}
}

// FeFuncG creates an SVG feFuncG element (self-closing)
func FeFuncG(args ...FeFuncGArg) html.Node {
	a := defaultFeFuncGAttrs()
	var kids []html.Component
	for _, ar := range args {
		ar.applyFeFuncG(a, &kids)
	}
	return html.Node{
		Tag:   "feFuncG",
		Attrs: a,
		Void:  true,
	}
}

// Global applies global SVG attributes to feFuncG
func (g Global) applyFeFuncG(a *FeFuncGAttrs, _ *[]html.Component) {
	g.do(&a.SvgGlobal)
}

// AmplitudeOpt applies to FeFuncG
func (o AmplitudeOpt) applyFeFuncG(a *FeFuncGAttrs, _ *[]html.Component) {
	a.Amplitude = o.v
}

// ExponentOpt applies to FeFuncG
func (o ExponentOpt) applyFeFuncG(a *FeFuncGAttrs, _ *[]html.Component) {
	a.Exponent = o.v
}

// InterceptOpt applies to FeFuncG
func (o InterceptOpt) applyFeFuncG(a *FeFuncGAttrs, _ *[]html.Component) {
	a.Intercept = o.v
}

// OffsetOpt applies to FeFuncG
func (o OffsetOpt) applyFeFuncG(a *FeFuncGAttrs, _ *[]html.Component) {
	a.Offset = o.v
}

// SlopeOpt applies to FeFuncG
func (o SlopeOpt) applyFeFuncG(a *FeFuncGAttrs, _ *[]html.Component) {
	a.Slope = o.v
}

// TableValuesOpt applies to FeFuncG
func (o TableValuesOpt) applyFeFuncG(a *FeFuncGAttrs, _ *[]html.Component) {
	a.TableValues = o.v
}

// TypeOpt applies to FeFuncG
func (o TypeOpt) applyFeFuncG(a *FeFuncGAttrs, _ *[]html.Component) {
	a.Type = o.v
}

// writeAttrs writes the SVG attributes to the string builder
func (a *FeFuncGAttrs) writeAttrs(sb *strings.Builder) {
	WriteSvgGlobal(sb, &a.SvgGlobal)
	if a.Amplitude != "" {
		SvgAttr(sb, "amplitude", a.Amplitude)
	}
	if a.Exponent != "" {
		SvgAttr(sb, "exponent", a.Exponent)
	}
	if a.Intercept != "" {
		SvgAttr(sb, "intercept", a.Intercept)
	}
	if a.Offset != "" {
		SvgAttr(sb, "offset", a.Offset)
	}
	if a.Slope != "" {
		SvgAttr(sb, "slope", a.Slope)
	}
	if a.TableValues != "" {
		SvgAttr(sb, "tableValues", a.TableValues)
	}
	if a.Type != "" {
		SvgAttr(sb, "type", a.Type)
	}
}
