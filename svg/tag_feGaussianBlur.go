// Code generated by gen-svg; DO NOT EDIT.

package svg

import (
	"strings"

	"github.com/plainkit/html"
)

// FeGaussianBlurAttrs holds the attributes for the feGaussianBlur SVG element
type FeGaussianBlurAttrs struct {
	SvgGlobal    SvgGlobalAttrs
	In           string
	StdDeviation string
}

// FeGaussianBlurArg interface for feGaussianBlur element arguments
type FeGaussianBlurArg interface {
	applyFeGaussianBlur(*FeGaussianBlurAttrs, *[]html.Component)
}

// defaultFeGaussianBlurAttrs creates default attributes for feGaussianBlur
func defaultFeGaussianBlurAttrs() *FeGaussianBlurAttrs {
	return &FeGaussianBlurAttrs{
		SvgGlobal: SvgGlobalAttrs{},
	}
}

// FeGaussianBlur creates an SVG feGaussianBlur element
func FeGaussianBlur(args ...FeGaussianBlurArg) html.Node {
	a := defaultFeGaussianBlurAttrs()
	var kids []html.Component
	for _, ar := range args {
		ar.applyFeGaussianBlur(a, &kids)
	}
	return html.Node{
		Tag:   "feGaussianBlur",
		Attrs: a,
		Kids:  kids,
	}
}

// Global applies global SVG attributes to feGaussianBlur
func (g Global) applyFeGaussianBlur(a *FeGaussianBlurAttrs, _ *[]html.Component) {
	g.do(&a.SvgGlobal)
}

// InOpt applies to FeGaussianBlur
func (o InOpt) applyFeGaussianBlur(a *FeGaussianBlurAttrs, _ *[]html.Component) {
	a.In = o.v
}

// StdDeviationOpt applies to FeGaussianBlur
func (o StdDeviationOpt) applyFeGaussianBlur(a *FeGaussianBlurAttrs, _ *[]html.Component) {
	a.StdDeviation = o.v
}

// writeAttrs writes the SVG attributes to the string builder
func (a *FeGaussianBlurAttrs) writeAttrs(sb *strings.Builder) {
	WriteSvgGlobal(sb, &a.SvgGlobal)
	if a.In != "" {
		SvgAttr(sb, "in", a.In)
	}
	if a.StdDeviation != "" {
		SvgAttr(sb, "stdDeviation", a.StdDeviation)
	}
}
