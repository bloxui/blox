// Code generated by gen-svg; DO NOT EDIT.

package svg

import (
	"strings"

	"github.com/plainkit/html"
)

// FeTurbulenceAttrs holds the attributes for the feTurbulence SVG element
type FeTurbulenceAttrs struct {
	SvgGlobal     SvgGlobalAttrs
	BaseFrequency string
	NumOctaves    string
	Seed          string
	StitchTiles   string
	Type          string
}

// FeTurbulenceArg interface for feTurbulence element arguments
type FeTurbulenceArg interface {
	applyFeTurbulence(*FeTurbulenceAttrs, *[]html.Component)
}

// defaultFeTurbulenceAttrs creates default attributes for feTurbulence
func defaultFeTurbulenceAttrs() *FeTurbulenceAttrs {
	return &FeTurbulenceAttrs{
		SvgGlobal: SvgGlobalAttrs{},
	}
}

// FeTurbulence creates an SVG feTurbulence element
func FeTurbulence(args ...FeTurbulenceArg) html.Node {
	a := defaultFeTurbulenceAttrs()
	var kids []html.Component
	for _, ar := range args {
		ar.applyFeTurbulence(a, &kids)
	}
	return html.Node{
		Tag:   "feTurbulence",
		Attrs: a,
		Kids:  kids,
	}
}

// Global applies global SVG attributes to feTurbulence
func (g Global) applyFeTurbulence(a *FeTurbulenceAttrs, _ *[]html.Component) {
	g.do(&a.SvgGlobal)
}

// BaseFrequencyOpt applies to FeTurbulence
func (o BaseFrequencyOpt) applyFeTurbulence(a *FeTurbulenceAttrs, _ *[]html.Component) {
	a.BaseFrequency = o.v
}

// NumOctavesOpt applies to FeTurbulence
func (o NumOctavesOpt) applyFeTurbulence(a *FeTurbulenceAttrs, _ *[]html.Component) {
	a.NumOctaves = o.v
}

// SeedOpt applies to FeTurbulence
func (o SeedOpt) applyFeTurbulence(a *FeTurbulenceAttrs, _ *[]html.Component) {
	a.Seed = o.v
}

// StitchTilesOpt applies to FeTurbulence
func (o StitchTilesOpt) applyFeTurbulence(a *FeTurbulenceAttrs, _ *[]html.Component) {
	a.StitchTiles = o.v
}

// TypeOpt applies to FeTurbulence
func (o TypeOpt) applyFeTurbulence(a *FeTurbulenceAttrs, _ *[]html.Component) {
	a.Type = o.v
}

// writeAttrs writes the SVG attributes to the string builder
func (a *FeTurbulenceAttrs) writeAttrs(sb *strings.Builder) {
	WriteSvgGlobal(sb, &a.SvgGlobal)
	if a.BaseFrequency != "" {
		SvgAttr(sb, "baseFrequency", a.BaseFrequency)
	}
	if a.NumOctaves != "" {
		SvgAttr(sb, "numOctaves", a.NumOctaves)
	}
	if a.Seed != "" {
		SvgAttr(sb, "seed", a.Seed)
	}
	if a.StitchTiles != "" {
		SvgAttr(sb, "stitchTiles", a.StitchTiles)
	}
	if a.Type != "" {
		SvgAttr(sb, "type", a.Type)
	}
}
