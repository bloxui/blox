// Code generated by gen-svg; DO NOT EDIT.

package svg

import (
	"strings"

	"github.com/plainkit/html"
)

// VkernAttrs holds the attributes for the vkern SVG element
type VkernAttrs struct {
	SvgGlobal SvgGlobalAttrs
	G1        string
	G2        string
	K         string
	U1        string
	U2        string
}

// VkernArg interface for vkern element arguments
type VkernArg interface {
	applyVkern(*VkernAttrs, *[]html.Component)
}

// defaultVkernAttrs creates default attributes for vkern
func defaultVkernAttrs() *VkernAttrs {
	return &VkernAttrs{
		SvgGlobal: SvgGlobalAttrs{},
	}
}

// Vkern creates an SVG vkern element
func Vkern(args ...VkernArg) html.Node {
	a := defaultVkernAttrs()
	var kids []html.Component
	for _, ar := range args {
		ar.applyVkern(a, &kids)
	}
	return html.Node{
		Tag:   "vkern",
		Attrs: a,
		Kids:  kids,
	}
}

// Global applies global SVG attributes to vkern
func (g Global) applyVkern(a *VkernAttrs, _ *[]html.Component) {
	g.do(&a.SvgGlobal)
}

// G1Opt applies to Vkern
func (o G1Opt) applyVkern(a *VkernAttrs, _ *[]html.Component) {
	a.G1 = o.v
}

// G2Opt applies to Vkern
func (o G2Opt) applyVkern(a *VkernAttrs, _ *[]html.Component) {
	a.G2 = o.v
}

// KOpt applies to Vkern
func (o KOpt) applyVkern(a *VkernAttrs, _ *[]html.Component) {
	a.K = o.v
}

// U1Opt applies to Vkern
func (o U1Opt) applyVkern(a *VkernAttrs, _ *[]html.Component) {
	a.U1 = o.v
}

// U2Opt applies to Vkern
func (o U2Opt) applyVkern(a *VkernAttrs, _ *[]html.Component) {
	a.U2 = o.v
}

// writeAttrs writes the SVG attributes to the string builder
func (a *VkernAttrs) writeAttrs(sb *strings.Builder) {
	WriteSvgGlobal(sb, &a.SvgGlobal)
	if a.G1 != "" {
		SvgAttr(sb, "g1", a.G1)
	}
	if a.G2 != "" {
		SvgAttr(sb, "g2", a.G2)
	}
	if a.K != "" {
		SvgAttr(sb, "k", a.K)
	}
	if a.U1 != "" {
		SvgAttr(sb, "u1", a.U1)
	}
	if a.U2 != "" {
		SvgAttr(sb, "u2", a.U2)
	}
}
