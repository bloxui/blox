// Code generated by gen-svg; DO NOT EDIT.

package svg

import (
	"strings"

	"github.com/plainkit/html"
)

// RadialGradientAttrs holds the attributes for the radialGradient SVG element
type RadialGradientAttrs struct {
	SvgGlobal         SvgGlobalAttrs
	Cx                string
	Cy                string
	Fx                string
	Fy                string
	GradientTransform string
	GradientUnits     string
	R                 string
}

// RadialGradientArg interface for radialGradient element arguments
type RadialGradientArg interface {
	applyRadialGradient(*RadialGradientAttrs, *[]html.Component)
}

// defaultRadialGradientAttrs creates default attributes for radialGradient
func defaultRadialGradientAttrs() *RadialGradientAttrs {
	return &RadialGradientAttrs{
		SvgGlobal: SvgGlobalAttrs{},
	}
}

// RadialGradient creates an SVG radialGradient element
func RadialGradient(args ...RadialGradientArg) html.Node {
	a := defaultRadialGradientAttrs()
	var kids []html.Component
	for _, ar := range args {
		ar.applyRadialGradient(a, &kids)
	}
	return html.Node{
		Tag:   "radialGradient",
		Attrs: a,
		Kids:  kids,
	}
}

// Global applies global SVG attributes to radialGradient
func (g Global) applyRadialGradient(a *RadialGradientAttrs, _ *[]html.Component) {
	g.do(&a.SvgGlobal)
}

// CxOpt applies to RadialGradient
func (o CxOpt) applyRadialGradient(a *RadialGradientAttrs, _ *[]html.Component) {
	a.Cx = o.v
}

// CyOpt applies to RadialGradient
func (o CyOpt) applyRadialGradient(a *RadialGradientAttrs, _ *[]html.Component) {
	a.Cy = o.v
}

// FxOpt applies to RadialGradient
func (o FxOpt) applyRadialGradient(a *RadialGradientAttrs, _ *[]html.Component) {
	a.Fx = o.v
}

// FyOpt applies to RadialGradient
func (o FyOpt) applyRadialGradient(a *RadialGradientAttrs, _ *[]html.Component) {
	a.Fy = o.v
}

// GradientTransformOpt applies to RadialGradient
func (o GradientTransformOpt) applyRadialGradient(a *RadialGradientAttrs, _ *[]html.Component) {
	a.GradientTransform = o.v
}

// GradientUnitsOpt applies to RadialGradient
func (o GradientUnitsOpt) applyRadialGradient(a *RadialGradientAttrs, _ *[]html.Component) {
	a.GradientUnits = o.v
}

// ROpt applies to RadialGradient
func (o ROpt) applyRadialGradient(a *RadialGradientAttrs, _ *[]html.Component) {
	a.R = o.v
}

// writeAttrs writes the SVG attributes to the string builder
func (a *RadialGradientAttrs) writeAttrs(sb *strings.Builder) {
	WriteSvgGlobal(sb, &a.SvgGlobal)
	if a.Cx != "" {
		SvgAttr(sb, "cx", a.Cx)
	}
	if a.Cy != "" {
		SvgAttr(sb, "cy", a.Cy)
	}
	if a.Fx != "" {
		SvgAttr(sb, "fx", a.Fx)
	}
	if a.Fy != "" {
		SvgAttr(sb, "fy", a.Fy)
	}
	if a.GradientTransform != "" {
		SvgAttr(sb, "gradientTransform", a.GradientTransform)
	}
	if a.GradientUnits != "" {
		SvgAttr(sb, "gradientUnits", a.GradientUnits)
	}
	if a.R != "" {
		SvgAttr(sb, "r", a.R)
	}
}
