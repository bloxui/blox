// Code generated by gen-svg; DO NOT EDIT.

package svg

import (
	"strings"

	"github.com/plainkit/html"
)

// MpathAttrs holds the attributes for the mpath SVG element
type MpathAttrs struct {
	SvgGlobal SvgGlobalAttrs
	Href      string
}

// MpathArg interface for mpath element arguments
type MpathArg interface {
	applyMpath(*MpathAttrs, *[]html.Component)
}

// defaultMpathAttrs creates default attributes for mpath
func defaultMpathAttrs() *MpathAttrs {
	return &MpathAttrs{
		SvgGlobal: SvgGlobalAttrs{},
	}
}

// Mpath creates an SVG mpath element
func Mpath(args ...MpathArg) html.Node {
	a := defaultMpathAttrs()
	var kids []html.Component
	for _, ar := range args {
		ar.applyMpath(a, &kids)
	}
	return html.Node{
		Tag:   "mpath",
		Attrs: a,
		Kids:  kids,
	}
}

// Global applies global SVG attributes to mpath
func (g Global) applyMpath(a *MpathAttrs, _ *[]html.Component) {
	g.do(&a.SvgGlobal)
}

// HrefOpt applies to Mpath
func (o HrefOpt) applyMpath(a *MpathAttrs, _ *[]html.Component) {
	a.Href = o.v
}

// writeAttrs writes the SVG attributes to the string builder
func (a *MpathAttrs) writeAttrs(sb *strings.Builder) {
	WriteSvgGlobal(sb, &a.SvgGlobal)
	if a.Href != "" {
		SvgAttr(sb, "href", a.Href)
	}
}
