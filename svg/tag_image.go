// Code generated by gen-svg; DO NOT EDIT.

package svg

import (
	"strings"

	"github.com/plainkit/html"
)

// ImageAttrs holds the attributes for the image SVG element
type ImageAttrs struct {
	SvgGlobal           SvgGlobalAttrs
	Height              string
	Href                string
	PreserveAspectRatio string
	Width               string
	X                   string
	Y                   string
}

// ImageArg interface for image element arguments
type ImageArg interface {
	applyImage(*ImageAttrs, *[]html.Component)
}

// defaultImageAttrs creates default attributes for image
func defaultImageAttrs() *ImageAttrs {
	return &ImageAttrs{
		SvgGlobal: SvgGlobalAttrs{},
	}
}

// Image creates an SVG image element
func Image(args ...ImageArg) html.Node {
	a := defaultImageAttrs()
	var kids []html.Component
	for _, ar := range args {
		ar.applyImage(a, &kids)
	}
	return html.Node{
		Tag:   "image",
		Attrs: a,
		Kids:  kids,
	}
}

// Global applies global SVG attributes to image
func (g Global) applyImage(a *ImageAttrs, _ *[]html.Component) {
	g.do(&a.SvgGlobal)
}

// HeightOpt applies to Image
func (o HeightOpt) applyImage(a *ImageAttrs, _ *[]html.Component) {
	a.Height = o.v
}

// HrefOpt applies to Image
func (o HrefOpt) applyImage(a *ImageAttrs, _ *[]html.Component) {
	a.Href = o.v
}

// PreserveAspectRatioOpt applies to Image
func (o PreserveAspectRatioOpt) applyImage(a *ImageAttrs, _ *[]html.Component) {
	a.PreserveAspectRatio = o.v
}

// WidthOpt applies to Image
func (o WidthOpt) applyImage(a *ImageAttrs, _ *[]html.Component) {
	a.Width = o.v
}

// XOpt applies to Image
func (o XOpt) applyImage(a *ImageAttrs, _ *[]html.Component) {
	a.X = o.v
}

// YOpt applies to Image
func (o YOpt) applyImage(a *ImageAttrs, _ *[]html.Component) {
	a.Y = o.v
}

// WriteAttrs writes the SVG attributes to the string builder
func (a *ImageAttrs) WriteAttrs(sb *strings.Builder) {
	WriteSvgGlobal(sb, &a.SvgGlobal)
	if a.Height != "" {
		SvgAttr(sb, "height", a.Height)
	}
	if a.Href != "" {
		SvgAttr(sb, "href", a.Href)
	}
	if a.PreserveAspectRatio != "" {
		SvgAttr(sb, "preserveAspectRatio", a.PreserveAspectRatio)
	}
	if a.Width != "" {
		SvgAttr(sb, "width", a.Width)
	}
	if a.X != "" {
		SvgAttr(sb, "x", a.X)
	}
	if a.Y != "" {
		SvgAttr(sb, "y", a.Y)
	}
}
