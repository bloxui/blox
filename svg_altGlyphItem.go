// Code generated by gen-svg; DO NOT EDIT.

package html

import (
	"strings"
)

// SvgAltGlyphItemAttrs holds the attributes for the altGlyphItem SVG element
type SvgAltGlyphItemAttrs struct {
	GlobalAttrs
}

// SvgAltGlyphItemArg interface for altGlyphItem element arguments
type SvgAltGlyphItemArg interface {
	ApplyAltGlyphItem(*SvgAltGlyphItemAttrs, *[]Component)
}

// defaultSvgAltGlyphItemAttrs creates default attributes for altGlyphItem
func defaultSvgAltGlyphItemAttrs() *SvgAltGlyphItemAttrs {
	return &SvgAltGlyphItemAttrs{
		GlobalAttrs: GlobalAttrs{},
	}
}

// SvgAltGlyphItem creates an SVG altGlyphItem element
func SvgAltGlyphItem(args ...SvgAltGlyphItemArg) Node {
	a := defaultSvgAltGlyphItemAttrs()
	var kids []Component
	for _, ar := range args {
		ar.ApplyAltGlyphItem(a, &kids)
	}
	return Node{
		Tag:   "altGlyphItem",
		Attrs: a,
		Kids:  kids,
	}
}

// Global applies global SVG attributes to altGlyphItem
func (g Global) ApplyAltGlyphItem(a *SvgAltGlyphItemAttrs, _ *[]Component) {
	g.Do(&a.GlobalAttrs)
}

// WriteAttrs writes the SVG attributes to the string builder
func (a *SvgAltGlyphItemAttrs) WriteAttrs(sb *strings.Builder) {
	WriteGlobal(sb, &a.GlobalAttrs)
}
