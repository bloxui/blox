// Code generated by gen-svg; DO NOT EDIT.

package html

import (
	"strings"
)

// SvgCursorAttrs holds the attributes for the cursor SVG element
type SvgCursorAttrs struct {
	GlobalAttrs
	ExternalResourcesRequired string
	RequiredExtensions        string
	RequiredFeatures          string
	SystemLanguage            string
	X                         string
	Y                         string
}

// SvgCursorArg interface for cursor element arguments
type SvgCursorArg interface {
	ApplyCursor(*SvgCursorAttrs, *[]Component)
}

// defaultSvgCursorAttrs creates default attributes for cursor
func defaultSvgCursorAttrs() *SvgCursorAttrs {
	return &SvgCursorAttrs{
		GlobalAttrs: GlobalAttrs{},
	}
}

// SvgCursor creates an SVG cursor element
func SvgCursor(args ...SvgCursorArg) Node {
	a := defaultSvgCursorAttrs()
	var kids []Component
	for _, ar := range args {
		ar.ApplyCursor(a, &kids)
	}
	return Node{
		Tag:   "cursor",
		Attrs: a,
		Kids:  kids,
	}
}

// Global applies global SVG attributes to cursor
func (g Global) ApplyCursor(a *SvgCursorAttrs, _ *[]Component) {
	g.Do(&a.GlobalAttrs)
}

// ExternalResourcesRequiredOpt applies to Cursor
func (o ExternalResourcesRequiredOpt) ApplyCursor(a *SvgCursorAttrs, _ *[]Component) {
	a.ExternalResourcesRequired = o.v
}

// RequiredExtensionsOpt applies to Cursor
func (o RequiredExtensionsOpt) ApplyCursor(a *SvgCursorAttrs, _ *[]Component) {
	a.RequiredExtensions = o.v
}

// RequiredFeaturesOpt applies to Cursor
func (o RequiredFeaturesOpt) ApplyCursor(a *SvgCursorAttrs, _ *[]Component) {
	a.RequiredFeatures = o.v
}

// SystemLanguageOpt applies to Cursor
func (o SystemLanguageOpt) ApplyCursor(a *SvgCursorAttrs, _ *[]Component) {
	a.SystemLanguage = o.v
}

// XOpt applies to Cursor
func (o XOpt) ApplyCursor(a *SvgCursorAttrs, _ *[]Component) {
	a.X = o.v
}

// YOpt applies to Cursor
func (o YOpt) ApplyCursor(a *SvgCursorAttrs, _ *[]Component) {
	a.Y = o.v
}

// WriteAttrs writes the SVG attributes to the string builder
func (a *SvgCursorAttrs) WriteAttrs(sb *strings.Builder) {
	WriteGlobal(sb, &a.GlobalAttrs)
	if a.ExternalResourcesRequired != "" {
		Attr(sb, "externalResourcesRequired", a.ExternalResourcesRequired)
	}
	if a.RequiredExtensions != "" {
		Attr(sb, "requiredExtensions", a.RequiredExtensions)
	}
	if a.RequiredFeatures != "" {
		Attr(sb, "requiredFeatures", a.RequiredFeatures)
	}
	if a.SystemLanguage != "" {
		Attr(sb, "systemLanguage", a.SystemLanguage)
	}
	if a.X != "" {
		Attr(sb, "x", a.X)
	}
	if a.Y != "" {
		Attr(sb, "y", a.Y)
	}
}
