// Code generated by gen-svg; DO NOT EDIT.

package html

import (
	"strings"
)

// SvgPolygonAttrs holds the attributes for the polygon SVG element
type SvgPolygonAttrs struct {
	GlobalAttrs
	Points string
}

// SvgPolygonArg interface for polygon element arguments
type SvgPolygonArg interface {
	applyPolygon(*SvgPolygonAttrs, *[]Component)
}

// defaultSvgPolygonAttrs creates default attributes for polygon
func defaultSvgPolygonAttrs() *SvgPolygonAttrs {
	return &SvgPolygonAttrs{
		GlobalAttrs: GlobalAttrs{},
	}
}

// SvgPolygon creates an SVG polygon element (self-closing)
func SvgPolygon(args ...SvgPolygonArg) Node {
	a := defaultSvgPolygonAttrs()
	var kids []Component
	for _, ar := range args {
		ar.applyPolygon(a, &kids)
	}
	return Node{
		Tag:   "polygon",
		Attrs: a,
		Void:  true,
	}
}

// Global applies global SVG attributes to polygon
func (g Global) applyPolygon(a *SvgPolygonAttrs, _ *[]Component) {
	g.Do(&a.GlobalAttrs)
}

// PointsOpt applies to Polygon
func (o PointsOpt) applyPolygon(a *SvgPolygonAttrs, _ *[]Component) {
	a.Points = o.v
}

// WriteAttrs writes the SVG attributes to the string builder
func (a *SvgPolygonAttrs) WriteAttrs(sb *strings.Builder) {
	WriteGlobal(sb, &a.GlobalAttrs)
	if a.Points != "" {
		Attr(sb, "points", a.Points)
	}
}
