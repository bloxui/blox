// Code generated by gen-svg; DO NOT EDIT.

package html

import (
	"strings"
)

// SvgSwitchAttrs holds the attributes for the switch SVG element
type SvgSwitchAttrs struct {
	GlobalAttrs
	RequiredExtensions string
	RequiredFeatures   string
	SystemLanguage     string
}

// SvgSwitchArg interface for switch element arguments
type SvgSwitchArg interface {
	applySwitch(*SvgSwitchAttrs, *[]Component)
}

// defaultSvgSwitchAttrs creates default attributes for switch
func defaultSvgSwitchAttrs() *SvgSwitchAttrs {
	return &SvgSwitchAttrs{
		GlobalAttrs: GlobalAttrs{},
	}
}

// SvgSwitch creates an SVG switch element
func SvgSwitch(args ...SvgSwitchArg) Node {
	a := defaultSvgSwitchAttrs()
	var kids []Component
	for _, ar := range args {
		ar.applySwitch(a, &kids)
	}
	return Node{
		Tag:   "switch",
		Attrs: a,
		Kids:  kids,
	}
}

// Global applies global SVG attributes to switch
func (g Global) applySwitch(a *SvgSwitchAttrs, _ *[]Component) {
	g.Do(&a.GlobalAttrs)
}

// RequiredExtensionsOpt applies to Switch
func (o RequiredExtensionsOpt) applySwitch(a *SvgSwitchAttrs, _ *[]Component) {
	a.RequiredExtensions = o.v
}

// RequiredFeaturesOpt applies to Switch
func (o RequiredFeaturesOpt) applySwitch(a *SvgSwitchAttrs, _ *[]Component) {
	a.RequiredFeatures = o.v
}

// SystemLanguageOpt applies to Switch
func (o SystemLanguageOpt) applySwitch(a *SvgSwitchAttrs, _ *[]Component) {
	a.SystemLanguage = o.v
}

// WriteAttrs writes the SVG attributes to the string builder
func (a *SvgSwitchAttrs) WriteAttrs(sb *strings.Builder) {
	WriteGlobal(sb, &a.GlobalAttrs)
	if a.RequiredExtensions != "" {
		Attr(sb, "requiredExtensions", a.RequiredExtensions)
	}
	if a.RequiredFeatures != "" {
		Attr(sb, "requiredFeatures", a.RequiredFeatures)
	}
	if a.SystemLanguage != "" {
		Attr(sb, "systemLanguage", a.SystemLanguage)
	}
}
