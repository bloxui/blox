// Code generated by gen-svg; DO NOT EDIT.

package html

import (
	"strings"
)

// SvgTextAttrs holds the attributes for the text SVG element
type SvgTextAttrs struct {
	GlobalAttrs
	Dx           string
	Dy           string
	LengthAdjust string
	Rotate       string
	TextLength   string
	X            string
	Y            string
}

// SvgTextArg interface for text element arguments
type SvgTextArg interface {
	applyText(*SvgTextAttrs, *[]Component)
}

// defaultSvgTextAttrs creates default attributes for text
func defaultSvgTextAttrs() *SvgTextAttrs {
	return &SvgTextAttrs{
		GlobalAttrs: GlobalAttrs{},
	}
}

// SvgText creates an SVG text element
func SvgText(args ...SvgTextArg) Node {
	a := defaultSvgTextAttrs()
	var kids []Component
	for _, ar := range args {
		ar.applyText(a, &kids)
	}
	return Node{
		Tag:   "text",
		Attrs: a,
		Kids:  kids,
	}
}

// Global applies global SVG attributes to text
func (g Global) applyText(a *SvgTextAttrs, _ *[]Component) {
	g.Do(&a.GlobalAttrs)
}

// DxOpt applies to Text
func (o DxOpt) applyText(a *SvgTextAttrs, _ *[]Component) {
	a.Dx = o.v
}

// DyOpt applies to Text
func (o DyOpt) applyText(a *SvgTextAttrs, _ *[]Component) {
	a.Dy = o.v
}

// LengthAdjustOpt applies to Text
func (o LengthAdjustOpt) applyText(a *SvgTextAttrs, _ *[]Component) {
	a.LengthAdjust = o.v
}

// RotateOpt applies to Text
func (o RotateOpt) applyText(a *SvgTextAttrs, _ *[]Component) {
	a.Rotate = o.v
}

// TextLengthOpt applies to Text
func (o TextLengthOpt) applyText(a *SvgTextAttrs, _ *[]Component) {
	a.TextLength = o.v
}

// XOpt applies to Text
func (o XOpt) applyText(a *SvgTextAttrs, _ *[]Component) {
	a.X = o.v
}

// YOpt applies to Text
func (o YOpt) applyText(a *SvgTextAttrs, _ *[]Component) {
	a.Y = o.v
}

// WriteAttrs writes the SVG attributes to the string builder
func (a *SvgTextAttrs) WriteAttrs(sb *strings.Builder) {
	WriteGlobal(sb, &a.GlobalAttrs)
	if a.Dx != "" {
		Attr(sb, "dx", a.Dx)
	}
	if a.Dy != "" {
		Attr(sb, "dy", a.Dy)
	}
	if a.LengthAdjust != "" {
		Attr(sb, "lengthAdjust", a.LengthAdjust)
	}
	if a.Rotate != "" {
		Attr(sb, "rotate", a.Rotate)
	}
	if a.TextLength != "" {
		Attr(sb, "textLength", a.TextLength)
	}
	if a.X != "" {
		Attr(sb, "x", a.X)
	}
	if a.Y != "" {
		Attr(sb, "y", a.Y)
	}
}
