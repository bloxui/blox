// Code generated by gen-svg; DO NOT EDIT.

package html

import (
	"strings"
)

// FilterAttrs holds the attributes for the filter SVG element
type FilterAttrs struct {
	SvgGlobal      SvgGlobalAttrs
	FilterUnits    string
	Height         string
	PrimitiveUnits string
	Width          string
	X              string
	Y              string
}

// FilterArg interface for filter element arguments
type FilterArg interface {
	ApplyFilter(*FilterAttrs, *[]html.Component)
}

// defaultFilterAttrs creates default attributes for filter
func defaultFilterAttrs() *FilterAttrs {
	return &FilterAttrs{
		SvgGlobal: SvgGlobalAttrs{},
	}
}

// Filter creates an SVG filter element
func Filter(args ...FilterArg) html.Node {
	a := defaultFilterAttrs()
	var kids []html.Component
	for _, ar := range args {
		ar.ApplyFilter(a, &kids)
	}
	return html.Node{
		Tag:   "filter",
		Attrs: a,
		Kids:  kids,
	}
}

// Global applies global SVG attributes to filter
func (g Global) ApplyFilter(a *FilterAttrs, _ *[]html.Component) {
	g.do(&a.SvgGlobal)
}

// FilterUnitsOpt applies to Filter
func (o FilterUnitsOpt) ApplyFilter(a *FilterAttrs, _ *[]html.Component) {
	a.FilterUnits = o.v
}

// HeightOpt applies to Filter
func (o HeightOpt) ApplyFilter(a *FilterAttrs, _ *[]html.Component) {
	a.Height = o.v
}

// PrimitiveUnitsOpt applies to Filter
func (o PrimitiveUnitsOpt) ApplyFilter(a *FilterAttrs, _ *[]html.Component) {
	a.PrimitiveUnits = o.v
}

// WidthOpt applies to Filter
func (o WidthOpt) ApplyFilter(a *FilterAttrs, _ *[]html.Component) {
	a.Width = o.v
}

// XOpt applies to Filter
func (o XOpt) ApplyFilter(a *FilterAttrs, _ *[]html.Component) {
	a.X = o.v
}

// YOpt applies to Filter
func (o YOpt) ApplyFilter(a *FilterAttrs, _ *[]html.Component) {
	a.Y = o.v
}

// WriteAttrs writes the SVG attributes to the string builder
func (a *FilterAttrs) WriteAttrs(sb *strings.Builder) {
	WriteSvgGlobal(sb, &a.SvgGlobal)
	if a.FilterUnits != "" {
		SvgAttr(sb, "filterUnits", a.FilterUnits)
	}
	if a.Height != "" {
		SvgAttr(sb, "height", a.Height)
	}
	if a.PrimitiveUnits != "" {
		SvgAttr(sb, "primitiveUnits", a.PrimitiveUnits)
	}
	if a.Width != "" {
		SvgAttr(sb, "width", a.Width)
	}
	if a.X != "" {
		SvgAttr(sb, "x", a.X)
	}
	if a.Y != "" {
		SvgAttr(sb, "y", a.Y)
	}
}
