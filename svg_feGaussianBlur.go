// Code generated by gen-svg; DO NOT EDIT.

package html

import (
	"strings"
)

// SvgFeGaussianBlurAttrs holds the attributes for the feGaussianBlur SVG element
type SvgFeGaussianBlurAttrs struct {
	GlobalAttrs
	In           string
	StdDeviation string
}

// SvgFeGaussianBlurArg interface for feGaussianBlur element arguments
type SvgFeGaussianBlurArg interface {
	applyFeGaussianBlur(*SvgFeGaussianBlurAttrs, *[]Component)
}

// defaultSvgFeGaussianBlurAttrs creates default attributes for feGaussianBlur
func defaultSvgFeGaussianBlurAttrs() *SvgFeGaussianBlurAttrs {
	return &SvgFeGaussianBlurAttrs{
		GlobalAttrs: GlobalAttrs{},
	}
}

// SvgFeGaussianBlur creates an SVG feGaussianBlur element
func SvgFeGaussianBlur(args ...SvgFeGaussianBlurArg) Node {
	a := defaultSvgFeGaussianBlurAttrs()
	var kids []Component
	for _, ar := range args {
		ar.applyFeGaussianBlur(a, &kids)
	}
	return Node{
		Tag:   "feGaussianBlur",
		Attrs: a,
		Kids:  kids,
	}
}

// Global applies global SVG attributes to feGaussianBlur
func (g Global) applyFeGaussianBlur(a *SvgFeGaussianBlurAttrs, _ *[]Component) {
	g.Do(&a.GlobalAttrs)
}

// InOpt applies to FeGaussianBlur
func (o InOpt) applyFeGaussianBlur(a *SvgFeGaussianBlurAttrs, _ *[]Component) {
	a.In = o.v
}

// StdDeviationOpt applies to FeGaussianBlur
func (o StdDeviationOpt) applyFeGaussianBlur(a *SvgFeGaussianBlurAttrs, _ *[]Component) {
	a.StdDeviation = o.v
}

// WriteAttrs writes the SVG attributes to the string builder
func (a *SvgFeGaussianBlurAttrs) WriteAttrs(sb *strings.Builder) {
	WriteGlobal(sb, &a.GlobalAttrs)
	if a.In != "" {
		Attr(sb, "in", a.In)
	}
	if a.StdDeviation != "" {
		Attr(sb, "stdDeviation", a.StdDeviation)
	}
}
