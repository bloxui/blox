// Code generated by gen-svg; DO NOT EDIT.

package html

import (
	"strings"
)

// StopAttrs holds the attributes for the stop SVG element
type StopAttrs struct {
	SvgGlobal SvgGlobalAttrs
	Offset    string
	StopColor string
}

// StopArg interface for stop element arguments
type StopArg interface {
	ApplyStop(*StopAttrs, *[]html.Component)
}

// defaultStopAttrs creates default attributes for stop
func defaultStopAttrs() *StopAttrs {
	return &StopAttrs{
		SvgGlobal: SvgGlobalAttrs{},
	}
}

// Stop creates an SVG stop element (self-closing)
func Stop(args ...StopArg) html.Node {
	a := defaultStopAttrs()
	var kids []html.Component
	for _, ar := range args {
		ar.ApplyStop(a, &kids)
	}
	return html.Node{
		Tag:   "stop",
		Attrs: a,
		Void:  true,
	}
}

// Global applies global SVG attributes to stop
func (g Global) ApplyStop(a *StopAttrs, _ *[]html.Component) {
	g.do(&a.SvgGlobal)
}

// OffsetOpt applies to Stop
func (o OffsetOpt) ApplyStop(a *StopAttrs, _ *[]html.Component) {
	a.Offset = o.v
}

// StopColorOpt applies to Stop
func (o StopColorOpt) ApplyStop(a *StopAttrs, _ *[]html.Component) {
	a.StopColor = o.v
}

// WriteAttrs writes the SVG attributes to the string builder
func (a *StopAttrs) WriteAttrs(sb *strings.Builder) {
	WriteSvgGlobal(sb, &a.SvgGlobal)
	if a.Offset != "" {
		SvgAttr(sb, "offset", a.Offset)
	}
	if a.StopColor != "" {
		SvgAttr(sb, "stop-color", a.StopColor)
	}
}
