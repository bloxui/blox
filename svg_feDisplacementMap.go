// Code generated by gen-svg; DO NOT EDIT.

package html

import (
	"strings"
)

// SvgFeDisplacementMapAttrs holds the attributes for the feDisplacementMap SVG element
type SvgFeDisplacementMapAttrs struct {
	GlobalAttrs
	In               string
	In2              string
	Scale            string
	XChannelSelector string
	YChannelSelector string
}

// SvgFeDisplacementMapArg interface for feDisplacementMap element arguments
type SvgFeDisplacementMapArg interface {
	applyFeDisplacementMap(*SvgFeDisplacementMapAttrs, *[]Component)
}

// defaultSvgFeDisplacementMapAttrs creates default attributes for feDisplacementMap
func defaultSvgFeDisplacementMapAttrs() *SvgFeDisplacementMapAttrs {
	return &SvgFeDisplacementMapAttrs{
		GlobalAttrs: GlobalAttrs{},
	}
}

// SvgFeDisplacementMap creates an SVG feDisplacementMap element
func SvgFeDisplacementMap(args ...SvgFeDisplacementMapArg) Node {
	a := defaultSvgFeDisplacementMapAttrs()
	var kids []Component
	for _, ar := range args {
		ar.applyFeDisplacementMap(a, &kids)
	}
	return Node{
		Tag:   "feDisplacementMap",
		Attrs: a,
		Kids:  kids,
	}
}

// Global applies global SVG attributes to feDisplacementMap
func (g Global) applyFeDisplacementMap(a *SvgFeDisplacementMapAttrs, _ *[]Component) {
	g.Do(&a.GlobalAttrs)
}

// InOpt applies to FeDisplacementMap
func (o InOpt) applyFeDisplacementMap(a *SvgFeDisplacementMapAttrs, _ *[]Component) {
	a.In = o.v
}

// In2Opt applies to FeDisplacementMap
func (o In2Opt) applyFeDisplacementMap(a *SvgFeDisplacementMapAttrs, _ *[]Component) {
	a.In2 = o.v
}

// ScaleOpt applies to FeDisplacementMap
func (o ScaleOpt) applyFeDisplacementMap(a *SvgFeDisplacementMapAttrs, _ *[]Component) {
	a.Scale = o.v
}

// XChannelSelectorOpt applies to FeDisplacementMap
func (o XChannelSelectorOpt) applyFeDisplacementMap(a *SvgFeDisplacementMapAttrs, _ *[]Component) {
	a.XChannelSelector = o.v
}

// YChannelSelectorOpt applies to FeDisplacementMap
func (o YChannelSelectorOpt) applyFeDisplacementMap(a *SvgFeDisplacementMapAttrs, _ *[]Component) {
	a.YChannelSelector = o.v
}

// WriteAttrs writes the SVG attributes to the string builder
func (a *SvgFeDisplacementMapAttrs) WriteAttrs(sb *strings.Builder) {
	WriteGlobal(sb, &a.GlobalAttrs)
	if a.In != "" {
		Attr(sb, "in", a.In)
	}
	if a.In2 != "" {
		Attr(sb, "in2", a.In2)
	}
	if a.Scale != "" {
		Attr(sb, "scale", a.Scale)
	}
	if a.XChannelSelector != "" {
		Attr(sb, "xChannelSelector", a.XChannelSelector)
	}
	if a.YChannelSelector != "" {
		Attr(sb, "yChannelSelector", a.YChannelSelector)
	}
}
