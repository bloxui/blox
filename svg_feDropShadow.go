// Code generated by gen-svg; DO NOT EDIT.

package html

import (
	"strings"
)

// SvgFeDropShadowAttrs holds the attributes for the feDropShadow SVG element
type SvgFeDropShadowAttrs struct {
	GlobalAttrs
	Dx           string
	Dy           string
	FloodColor   string
	FloodOpacity string
	StdDeviation string
}

// SvgFeDropShadowArg interface for feDropShadow element arguments
type SvgFeDropShadowArg interface {
	applyFeDropShadow(*SvgFeDropShadowAttrs, *[]Component)
}

// defaultSvgFeDropShadowAttrs creates default attributes for feDropShadow
func defaultSvgFeDropShadowAttrs() *SvgFeDropShadowAttrs {
	return &SvgFeDropShadowAttrs{
		GlobalAttrs: GlobalAttrs{},
	}
}

// SvgFeDropShadow creates an SVG feDropShadow element
func SvgFeDropShadow(args ...SvgFeDropShadowArg) Node {
	a := defaultSvgFeDropShadowAttrs()
	var kids []Component
	for _, ar := range args {
		ar.applyFeDropShadow(a, &kids)
	}
	return Node{
		Tag:   "feDropShadow",
		Attrs: a,
		Kids:  kids,
	}
}

// Global applies global SVG attributes to feDropShadow
func (g Global) applyFeDropShadow(a *SvgFeDropShadowAttrs, _ *[]Component) {
	g.Do(&a.GlobalAttrs)
}

// DxOpt applies to FeDropShadow
func (o DxOpt) applyFeDropShadow(a *SvgFeDropShadowAttrs, _ *[]Component) {
	a.Dx = o.v
}

// DyOpt applies to FeDropShadow
func (o DyOpt) applyFeDropShadow(a *SvgFeDropShadowAttrs, _ *[]Component) {
	a.Dy = o.v
}

// FloodColorOpt applies to FeDropShadow
func (o FloodColorOpt) applyFeDropShadow(a *SvgFeDropShadowAttrs, _ *[]Component) {
	a.FloodColor = o.v
}

// FloodOpacityOpt applies to FeDropShadow
func (o FloodOpacityOpt) applyFeDropShadow(a *SvgFeDropShadowAttrs, _ *[]Component) {
	a.FloodOpacity = o.v
}

// StdDeviationOpt applies to FeDropShadow
func (o StdDeviationOpt) applyFeDropShadow(a *SvgFeDropShadowAttrs, _ *[]Component) {
	a.StdDeviation = o.v
}

// WriteAttrs writes the SVG attributes to the string builder
func (a *SvgFeDropShadowAttrs) WriteAttrs(sb *strings.Builder) {
	WriteGlobal(sb, &a.GlobalAttrs)
	if a.Dx != "" {
		Attr(sb, "dx", a.Dx)
	}
	if a.Dy != "" {
		Attr(sb, "dy", a.Dy)
	}
	if a.FloodColor != "" {
		Attr(sb, "flood-color", a.FloodColor)
	}
	if a.FloodOpacity != "" {
		Attr(sb, "flood-opacity", a.FloodOpacity)
	}
	if a.StdDeviation != "" {
		Attr(sb, "stdDeviation", a.StdDeviation)
	}
}
