// Code generated by gen-svg; DO NOT EDIT.

package html

import (
	"strings"
)

// SvgTspanAttrs holds the attributes for the tspan SVG element
type SvgTspanAttrs struct {
	GlobalAttrs
	Dx     string
	Dy     string
	Rotate string
	X      string
	Y      string
}

// SvgTspanArg interface for tspan element arguments
type SvgTspanArg interface {
	applyTspan(*SvgTspanAttrs, *[]Component)
}

// defaultSvgTspanAttrs creates default attributes for tspan
func defaultSvgTspanAttrs() *SvgTspanAttrs {
	return &SvgTspanAttrs{
		GlobalAttrs: GlobalAttrs{},
	}
}

// SvgTspan creates an SVG tspan element
func SvgTspan(args ...SvgTspanArg) Node {
	a := defaultSvgTspanAttrs()
	var kids []Component
	for _, ar := range args {
		ar.applyTspan(a, &kids)
	}
	return Node{
		Tag:   "tspan",
		Attrs: a,
		Kids:  kids,
	}
}

// Global applies global SVG attributes to tspan
func (g Global) applyTspan(a *SvgTspanAttrs, _ *[]Component) {
	g.Do(&a.GlobalAttrs)
}

// DxOpt applies to Tspan
func (o DxOpt) applyTspan(a *SvgTspanAttrs, _ *[]Component) {
	a.Dx = o.v
}

// DyOpt applies to Tspan
func (o DyOpt) applyTspan(a *SvgTspanAttrs, _ *[]Component) {
	a.Dy = o.v
}

// RotateOpt applies to Tspan
func (o RotateOpt) applyTspan(a *SvgTspanAttrs, _ *[]Component) {
	a.Rotate = o.v
}

// XOpt applies to Tspan
func (o XOpt) applyTspan(a *SvgTspanAttrs, _ *[]Component) {
	a.X = o.v
}

// YOpt applies to Tspan
func (o YOpt) applyTspan(a *SvgTspanAttrs, _ *[]Component) {
	a.Y = o.v
}

// WriteAttrs writes the SVG attributes to the string builder
func (a *SvgTspanAttrs) WriteAttrs(sb *strings.Builder) {
	WriteGlobal(sb, &a.GlobalAttrs)
	if a.Dx != "" {
		Attr(sb, "dx", a.Dx)
	}
	if a.Dy != "" {
		Attr(sb, "dy", a.Dy)
	}
	if a.Rotate != "" {
		Attr(sb, "rotate", a.Rotate)
	}
	if a.X != "" {
		Attr(sb, "x", a.X)
	}
	if a.Y != "" {
		Attr(sb, "y", a.Y)
	}
}
