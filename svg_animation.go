// Code generated by gen-svg; DO NOT EDIT.

package html

import (
	"strings"
)

// SvgAnimationAttrs holds the attributes for the animation SVG element
type SvgAnimationAttrs struct {
	GlobalAttrs
	Begin                     string
	Dur                       string
	End                       string
	ExternalResourcesRequired string
	Fill                      string
	FocusHighlight            string
	Focusable                 string
	Height                    string
	InitialVisibility         string
	Max                       string
	Min                       string
	NavDown                   string
	NavDownLeft               string
	NavDownRight              string
	NavLeft                   string
	NavNext                   string
	NavPrev                   string
	NavRight                  string
	NavUp                     string
	NavUpLeft                 string
	NavUpRight                string
	PreserveAspectRatio       string
	RepeatCount               string
	RepeatDur                 string
	RequiredExtensions        string
	RequiredFeatures          string
	RequiredFonts             string
	RequiredFormats           string
	Restart                   string
	SyncBehavior              string
	SyncMaster                string
	SyncTolerance             string
	SystemLanguage            string
	Transform                 string
	Width                     string
	X                         string
	Y                         string
}

// SvgAnimationArg interface for animation element arguments
type SvgAnimationArg interface {
	applyAnimation(*SvgAnimationAttrs, *[]Component)
}

// defaultSvgAnimationAttrs creates default attributes for animation
func defaultSvgAnimationAttrs() *SvgAnimationAttrs {
	return &SvgAnimationAttrs{
		GlobalAttrs: GlobalAttrs{},
	}
}

// SvgAnimation creates an SVG animation element
func SvgAnimation(args ...SvgAnimationArg) Node {
	a := defaultSvgAnimationAttrs()
	var kids []Component
	for _, ar := range args {
		ar.applyAnimation(a, &kids)
	}
	return Node{
		Tag:   "animation",
		Attrs: a,
		Kids:  kids,
	}
}

// Global applies global SVG attributes to animation
func (g Global) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	g.Do(&a.GlobalAttrs)
}

// BeginOpt applies to Animation
func (o BeginOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.Begin = o.v
}

// DurOpt applies to Animation
func (o DurOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.Dur = o.v
}

// EndOpt applies to Animation
func (o EndOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.End = o.v
}

// ExternalResourcesRequiredOpt applies to Animation
func (o ExternalResourcesRequiredOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.ExternalResourcesRequired = o.v
}

// FillOpt applies to Animation
func (o FillOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.Fill = o.v
}

// FocusHighlightOpt applies to Animation
func (o FocusHighlightOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.FocusHighlight = o.v
}

// FocusableOpt applies to Animation
func (o FocusableOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.Focusable = o.v
}

// HeightOpt applies to Animation
func (o HeightOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.Height = o.v
}

// InitialVisibilityOpt applies to Animation
func (o InitialVisibilityOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.InitialVisibility = o.v
}

// MaxOpt applies to Animation
func (o MaxOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.Max = o.v
}

// MinOpt applies to Animation
func (o MinOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.Min = o.v
}

// NavDownOpt applies to Animation
func (o NavDownOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.NavDown = o.v
}

// NavDownLeftOpt applies to Animation
func (o NavDownLeftOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.NavDownLeft = o.v
}

// NavDownRightOpt applies to Animation
func (o NavDownRightOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.NavDownRight = o.v
}

// NavLeftOpt applies to Animation
func (o NavLeftOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.NavLeft = o.v
}

// NavNextOpt applies to Animation
func (o NavNextOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.NavNext = o.v
}

// NavPrevOpt applies to Animation
func (o NavPrevOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.NavPrev = o.v
}

// NavRightOpt applies to Animation
func (o NavRightOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.NavRight = o.v
}

// NavUpOpt applies to Animation
func (o NavUpOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.NavUp = o.v
}

// NavUpLeftOpt applies to Animation
func (o NavUpLeftOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.NavUpLeft = o.v
}

// NavUpRightOpt applies to Animation
func (o NavUpRightOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.NavUpRight = o.v
}

// PreserveAspectRatioOpt applies to Animation
func (o PreserveAspectRatioOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.PreserveAspectRatio = o.v
}

// RepeatCountOpt applies to Animation
func (o RepeatCountOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.RepeatCount = o.v
}

// RepeatDurOpt applies to Animation
func (o RepeatDurOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.RepeatDur = o.v
}

// RequiredExtensionsOpt applies to Animation
func (o RequiredExtensionsOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.RequiredExtensions = o.v
}

// RequiredFeaturesOpt applies to Animation
func (o RequiredFeaturesOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.RequiredFeatures = o.v
}

// RequiredFontsOpt applies to Animation
func (o RequiredFontsOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.RequiredFonts = o.v
}

// RequiredFormatsOpt applies to Animation
func (o RequiredFormatsOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.RequiredFormats = o.v
}

// RestartOpt applies to Animation
func (o RestartOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.Restart = o.v
}

// SyncBehaviorOpt applies to Animation
func (o SyncBehaviorOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.SyncBehavior = o.v
}

// SyncMasterOpt applies to Animation
func (o SyncMasterOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.SyncMaster = o.v
}

// SyncToleranceOpt applies to Animation
func (o SyncToleranceOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.SyncTolerance = o.v
}

// SystemLanguageOpt applies to Animation
func (o SystemLanguageOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.SystemLanguage = o.v
}

// TransformOpt applies to Animation
func (o TransformOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.Transform = o.v
}

// WidthOpt applies to Animation
func (o WidthOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.Width = o.v
}

// XOpt applies to Animation
func (o XOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.X = o.v
}

// YOpt applies to Animation
func (o YOpt) applyAnimation(a *SvgAnimationAttrs, _ *[]Component) {
	a.Y = o.v
}

// WriteAttrs writes the SVG attributes to the string builder
func (a *SvgAnimationAttrs) WriteAttrs(sb *strings.Builder) {
	WriteGlobal(sb, &a.GlobalAttrs)
	if a.Begin != "" {
		Attr(sb, "begin", a.Begin)
	}
	if a.Dur != "" {
		Attr(sb, "dur", a.Dur)
	}
	if a.End != "" {
		Attr(sb, "end", a.End)
	}
	if a.ExternalResourcesRequired != "" {
		Attr(sb, "externalResourcesRequired", a.ExternalResourcesRequired)
	}
	if a.Fill != "" {
		Attr(sb, "fill", a.Fill)
	}
	if a.FocusHighlight != "" {
		Attr(sb, "focusHighlight", a.FocusHighlight)
	}
	if a.Focusable != "" {
		Attr(sb, "focusable", a.Focusable)
	}
	if a.Height != "" {
		Attr(sb, "height", a.Height)
	}
	if a.InitialVisibility != "" {
		Attr(sb, "initialVisibility", a.InitialVisibility)
	}
	if a.Max != "" {
		Attr(sb, "max", a.Max)
	}
	if a.Min != "" {
		Attr(sb, "min", a.Min)
	}
	if a.NavDown != "" {
		Attr(sb, "nav-down", a.NavDown)
	}
	if a.NavDownLeft != "" {
		Attr(sb, "nav-down-left", a.NavDownLeft)
	}
	if a.NavDownRight != "" {
		Attr(sb, "nav-down-right", a.NavDownRight)
	}
	if a.NavLeft != "" {
		Attr(sb, "nav-left", a.NavLeft)
	}
	if a.NavNext != "" {
		Attr(sb, "nav-next", a.NavNext)
	}
	if a.NavPrev != "" {
		Attr(sb, "nav-prev", a.NavPrev)
	}
	if a.NavRight != "" {
		Attr(sb, "nav-right", a.NavRight)
	}
	if a.NavUp != "" {
		Attr(sb, "nav-up", a.NavUp)
	}
	if a.NavUpLeft != "" {
		Attr(sb, "nav-up-left", a.NavUpLeft)
	}
	if a.NavUpRight != "" {
		Attr(sb, "nav-up-right", a.NavUpRight)
	}
	if a.PreserveAspectRatio != "" {
		Attr(sb, "preserveAspectRatio", a.PreserveAspectRatio)
	}
	if a.RepeatCount != "" {
		Attr(sb, "repeatCount", a.RepeatCount)
	}
	if a.RepeatDur != "" {
		Attr(sb, "repeatDur", a.RepeatDur)
	}
	if a.RequiredExtensions != "" {
		Attr(sb, "requiredExtensions", a.RequiredExtensions)
	}
	if a.RequiredFeatures != "" {
		Attr(sb, "requiredFeatures", a.RequiredFeatures)
	}
	if a.RequiredFonts != "" {
		Attr(sb, "requiredFonts", a.RequiredFonts)
	}
	if a.RequiredFormats != "" {
		Attr(sb, "requiredFormats", a.RequiredFormats)
	}
	if a.Restart != "" {
		Attr(sb, "restart", a.Restart)
	}
	if a.SyncBehavior != "" {
		Attr(sb, "syncBehavior", a.SyncBehavior)
	}
	if a.SyncMaster != "" {
		Attr(sb, "syncMaster", a.SyncMaster)
	}
	if a.SyncTolerance != "" {
		Attr(sb, "syncTolerance", a.SyncTolerance)
	}
	if a.SystemLanguage != "" {
		Attr(sb, "systemLanguage", a.SystemLanguage)
	}
	if a.Transform != "" {
		Attr(sb, "transform", a.Transform)
	}
	if a.Width != "" {
		Attr(sb, "width", a.Width)
	}
	if a.X != "" {
		Attr(sb, "x", a.X)
	}
	if a.Y != "" {
		Attr(sb, "y", a.Y)
	}
}
