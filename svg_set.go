// Code generated by gen-svg; DO NOT EDIT.

package html

import (
	"strings"
)

// SvgSetAttrs holds the attributes for the set SVG element
type SvgSetAttrs struct {
	GlobalAttrs
	AttributeName string
	AttributeType string
	Begin         string
	Dur           string
	End           string
	Max           string
	Min           string
	RepeatCount   string
	RepeatDur     string
	Restart       string
	To            string
}

// SvgSetArg interface for set element arguments
type SvgSetArg interface {
	applySet(*SvgSetAttrs, *[]Component)
}

// defaultSvgSetAttrs creates default attributes for set
func defaultSvgSetAttrs() *SvgSetAttrs {
	return &SvgSetAttrs{
		GlobalAttrs: GlobalAttrs{},
	}
}

// SvgSet creates an SVG set element
func SvgSet(args ...SvgSetArg) Node {
	a := defaultSvgSetAttrs()
	var kids []Component
	for _, ar := range args {
		ar.applySet(a, &kids)
	}
	return Node{
		Tag:   "set",
		Attrs: a,
		Kids:  kids,
	}
}

// Global applies global SVG attributes to set
func (g Global) applySet(a *SvgSetAttrs, _ *[]Component) {
	g.Do(&a.GlobalAttrs)
}

// AttributeNameOpt applies to Set
func (o AttributeNameOpt) applySet(a *SvgSetAttrs, _ *[]Component) {
	a.AttributeName = o.v
}

// AttributeTypeOpt applies to Set
func (o AttributeTypeOpt) applySet(a *SvgSetAttrs, _ *[]Component) {
	a.AttributeType = o.v
}

// BeginOpt applies to Set
func (o BeginOpt) applySet(a *SvgSetAttrs, _ *[]Component) {
	a.Begin = o.v
}

// DurOpt applies to Set
func (o DurOpt) applySet(a *SvgSetAttrs, _ *[]Component) {
	a.Dur = o.v
}

// EndOpt applies to Set
func (o EndOpt) applySet(a *SvgSetAttrs, _ *[]Component) {
	a.End = o.v
}

// MaxOpt applies to Set
func (o MaxOpt) applySet(a *SvgSetAttrs, _ *[]Component) {
	a.Max = o.v
}

// MinOpt applies to Set
func (o MinOpt) applySet(a *SvgSetAttrs, _ *[]Component) {
	a.Min = o.v
}

// RepeatCountOpt applies to Set
func (o RepeatCountOpt) applySet(a *SvgSetAttrs, _ *[]Component) {
	a.RepeatCount = o.v
}

// RepeatDurOpt applies to Set
func (o RepeatDurOpt) applySet(a *SvgSetAttrs, _ *[]Component) {
	a.RepeatDur = o.v
}

// RestartOpt applies to Set
func (o RestartOpt) applySet(a *SvgSetAttrs, _ *[]Component) {
	a.Restart = o.v
}

// ToOpt applies to Set
func (o ToOpt) applySet(a *SvgSetAttrs, _ *[]Component) {
	a.To = o.v
}

// WriteAttrs writes the SVG attributes to the string builder
func (a *SvgSetAttrs) WriteAttrs(sb *strings.Builder) {
	WriteGlobal(sb, &a.GlobalAttrs)
	if a.AttributeName != "" {
		Attr(sb, "attributeName", a.AttributeName)
	}
	if a.AttributeType != "" {
		Attr(sb, "attributeType", a.AttributeType)
	}
	if a.Begin != "" {
		Attr(sb, "begin", a.Begin)
	}
	if a.Dur != "" {
		Attr(sb, "dur", a.Dur)
	}
	if a.End != "" {
		Attr(sb, "end", a.End)
	}
	if a.Max != "" {
		Attr(sb, "max", a.Max)
	}
	if a.Min != "" {
		Attr(sb, "min", a.Min)
	}
	if a.RepeatCount != "" {
		Attr(sb, "repeatCount", a.RepeatCount)
	}
	if a.RepeatDur != "" {
		Attr(sb, "repeatDur", a.RepeatDur)
	}
	if a.Restart != "" {
		Attr(sb, "restart", a.Restart)
	}
	if a.To != "" {
		Attr(sb, "to", a.To)
	}
}
