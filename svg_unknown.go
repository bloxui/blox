// Code generated by gen-svg; DO NOT EDIT.

package html

import (
	"strings"
)

// SvgUnknownAttrs holds the attributes for the unknown SVG element
type SvgUnknownAttrs struct {
	GlobalAttrs
	RequiredExtensions string
	SystemLanguage     string
}

// SvgUnknownArg interface for unknown element arguments
type SvgUnknownArg interface {
	applyUnknown(*SvgUnknownAttrs, *[]Component)
}

// defaultSvgUnknownAttrs creates default attributes for unknown
func defaultSvgUnknownAttrs() *SvgUnknownAttrs {
	return &SvgUnknownAttrs{
		GlobalAttrs: GlobalAttrs{},
	}
}

// SvgUnknown creates an SVG unknown element
func SvgUnknown(args ...SvgUnknownArg) Node {
	a := defaultSvgUnknownAttrs()
	var kids []Component
	for _, ar := range args {
		ar.applyUnknown(a, &kids)
	}
	return Node{
		Tag:   "unknown",
		Attrs: a,
		Kids:  kids,
	}
}

// Global applies global SVG attributes to unknown
func (g Global) applyUnknown(a *SvgUnknownAttrs, _ *[]Component) {
	g.Do(&a.GlobalAttrs)
}

// RequiredExtensionsOpt applies to Unknown
func (o RequiredExtensionsOpt) applyUnknown(a *SvgUnknownAttrs, _ *[]Component) {
	a.RequiredExtensions = o.v
}

// SystemLanguageOpt applies to Unknown
func (o SystemLanguageOpt) applyUnknown(a *SvgUnknownAttrs, _ *[]Component) {
	a.SystemLanguage = o.v
}

// WriteAttrs writes the SVG attributes to the string builder
func (a *SvgUnknownAttrs) WriteAttrs(sb *strings.Builder) {
	WriteGlobal(sb, &a.GlobalAttrs)
	if a.RequiredExtensions != "" {
		Attr(sb, "requiredExtensions", a.RequiredExtensions)
	}
	if a.SystemLanguage != "" {
		Attr(sb, "systemLanguage", a.SystemLanguage)
	}
}
