// Code generated by gen-svg; DO NOT EDIT.

package html

import (
	"strings"
)

// SvgColorProfileAttrs holds the attributes for the color-profile SVG element
type SvgColorProfileAttrs struct {
	GlobalAttrs
	Local           string
	Name            string
	RenderingIntent string
}

// SvgColorProfileArg interface for color-profile element arguments
type SvgColorProfileArg interface {
	ApplyColorProfile(*SvgColorProfileAttrs, *[]Component)
}

// defaultSvgColorProfileAttrs creates default attributes for color-profile
func defaultSvgColorProfileAttrs() *SvgColorProfileAttrs {
	return &SvgColorProfileAttrs{
		GlobalAttrs: GlobalAttrs{},
	}
}

// SvgColorProfile creates an SVG color-profile element
func SvgColorProfile(args ...SvgColorProfileArg) Node {
	a := defaultSvgColorProfileAttrs()
	var kids []Component
	for _, ar := range args {
		ar.ApplyColorProfile(a, &kids)
	}
	return Node{
		Tag:   "color-profile",
		Attrs: a,
		Kids:  kids,
	}
}

// Global applies global SVG attributes to color-profile
func (g Global) ApplyColorProfile(a *SvgColorProfileAttrs, _ *[]Component) {
	g.Do(&a.GlobalAttrs)
}

// LocalOpt applies to ColorProfile
func (o LocalOpt) ApplyColorProfile(a *SvgColorProfileAttrs, _ *[]Component) {
	a.Local = o.v
}

// NameOpt applies to ColorProfile
func (o NameOpt) ApplyColorProfile(a *SvgColorProfileAttrs, _ *[]Component) {
	a.Name = o.v
}

// RenderingIntentOpt applies to ColorProfile
func (o RenderingIntentOpt) ApplyColorProfile(a *SvgColorProfileAttrs, _ *[]Component) {
	a.RenderingIntent = o.v
}

// WriteAttrs writes the SVG attributes to the string builder
func (a *SvgColorProfileAttrs) WriteAttrs(sb *strings.Builder) {
	WriteGlobal(sb, &a.GlobalAttrs)
	if a.Local != "" {
		Attr(sb, "local", a.Local)
	}
	if a.Name != "" {
		Attr(sb, "name", a.Name)
	}
	if a.RenderingIntent != "" {
		Attr(sb, "rendering-intent", a.RenderingIntent)
	}
}
