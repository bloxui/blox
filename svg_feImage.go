// Code generated by gen-svg; DO NOT EDIT.

package html

import (
	"strings"
)

// FeImageAttrs holds the attributes for the feImage SVG element
type FeImageAttrs struct {
	SvgGlobal                 SvgGlobalAttrs
	ExternalResourcesRequired bool
	Href                      string
	PreserveAspectRatio       string
}

// FeImageArg interface for feImage element arguments
type FeImageArg interface {
	ApplyFeImage(*FeImageAttrs, *[]html.Component)
}

// defaultFeImageAttrs creates default attributes for feImage
func defaultFeImageAttrs() *FeImageAttrs {
	return &FeImageAttrs{
		SvgGlobal: SvgGlobalAttrs{},
	}
}

// FeImage creates an SVG feImage element
func FeImage(args ...FeImageArg) html.Node {
	a := defaultFeImageAttrs()
	var kids []html.Component
	for _, ar := range args {
		ar.ApplyFeImage(a, &kids)
	}
	return html.Node{
		Tag:   "feImage",
		Attrs: a,
		Kids:  kids,
	}
}

// Global applies global SVG attributes to feImage
func (g Global) ApplyFeImage(a *FeImageAttrs, _ *[]html.Component) {
	g.do(&a.SvgGlobal)
}

// ExternalResourcesRequiredOpt applies to FeImage
func (o ExternalResourcesRequiredOpt) ApplyFeImage(a *FeImageAttrs, _ *[]html.Component) {
	a.ExternalResourcesRequired = true
}

// HrefOpt applies to FeImage
func (o HrefOpt) ApplyFeImage(a *FeImageAttrs, _ *[]html.Component) {
	a.Href = o.v
}

// PreserveAspectRatioOpt applies to FeImage
func (o PreserveAspectRatioOpt) ApplyFeImage(a *FeImageAttrs, _ *[]html.Component) {
	a.PreserveAspectRatio = o.v
}

// WriteAttrs writes the SVG attributes to the string builder
func (a *FeImageAttrs) WriteAttrs(sb *strings.Builder) {
	WriteSvgGlobal(sb, &a.SvgGlobal)
	if a.ExternalResourcesRequired {
		SvgBoolAttr(sb, "externalResourcesRequired")
	}
	if a.Href != "" {
		SvgAttr(sb, "href", a.Href)
	}
	if a.PreserveAspectRatio != "" {
		SvgAttr(sb, "preserveAspectRatio", a.PreserveAspectRatio)
	}
}
