// Code generated by gen-svg; DO NOT EDIT.

package html

import (
	"strings"
)

// UseAttrs holds the attributes for the use SVG element
type UseAttrs struct {
	SvgGlobal SvgGlobalAttrs
	Height    string
	Href      string
	Width     string
	X         string
	Y         string
}

// UseArg interface for use element arguments
type UseArg interface {
	ApplyUse(*UseAttrs, *[]html.Component)
}

// defaultUseAttrs creates default attributes for use
func defaultUseAttrs() *UseAttrs {
	return &UseAttrs{
		SvgGlobal: SvgGlobalAttrs{},
	}
}

// Use creates an SVG use element (self-closing)
func Use(args ...UseArg) html.Node {
	a := defaultUseAttrs()
	var kids []html.Component
	for _, ar := range args {
		ar.ApplyUse(a, &kids)
	}
	return html.Node{
		Tag:   "use",
		Attrs: a,
		Void:  true,
	}
}

// Global applies global SVG attributes to use
func (g Global) ApplyUse(a *UseAttrs, _ *[]html.Component) {
	g.do(&a.SvgGlobal)
}

// HeightOpt applies to Use
func (o HeightOpt) ApplyUse(a *UseAttrs, _ *[]html.Component) {
	a.Height = o.v
}

// HrefOpt applies to Use
func (o HrefOpt) ApplyUse(a *UseAttrs, _ *[]html.Component) {
	a.Href = o.v
}

// WidthOpt applies to Use
func (o WidthOpt) ApplyUse(a *UseAttrs, _ *[]html.Component) {
	a.Width = o.v
}

// XOpt applies to Use
func (o XOpt) ApplyUse(a *UseAttrs, _ *[]html.Component) {
	a.X = o.v
}

// YOpt applies to Use
func (o YOpt) ApplyUse(a *UseAttrs, _ *[]html.Component) {
	a.Y = o.v
}

// WriteAttrs writes the SVG attributes to the string builder
func (a *UseAttrs) WriteAttrs(sb *strings.Builder) {
	WriteSvgGlobal(sb, &a.SvgGlobal)
	if a.Height != "" {
		SvgAttr(sb, "height", a.Height)
	}
	if a.Href != "" {
		SvgAttr(sb, "href", a.Href)
	}
	if a.Width != "" {
		SvgAttr(sb, "width", a.Width)
	}
	if a.X != "" {
		SvgAttr(sb, "x", a.X)
	}
	if a.Y != "" {
		SvgAttr(sb, "y", a.Y)
	}
}
