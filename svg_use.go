// Code generated by gen-svg; DO NOT EDIT.

package html

import (
	"strings"
)

// SvgUseAttrs holds the attributes for the use SVG element
type SvgUseAttrs struct {
	GlobalAttrs
	Height string
	Href   string
	Width  string
	X      string
	Y      string
}

// SvgUseArg interface for use element arguments
type SvgUseArg interface {
	applyUse(*SvgUseAttrs, *[]Component)
}

// defaultSvgUseAttrs creates default attributes for use
func defaultSvgUseAttrs() *SvgUseAttrs {
	return &SvgUseAttrs{
		GlobalAttrs: GlobalAttrs{},
	}
}

// SvgUse creates an SVG use element (self-closing)
func SvgUse(args ...SvgUseArg) Node {
	a := defaultSvgUseAttrs()
	var kids []Component
	for _, ar := range args {
		ar.applyUse(a, &kids)
	}
	return Node{
		Tag:   "use",
		Attrs: a,
		Void:  true,
	}
}

// Global applies global SVG attributes to use
func (g Global) applyUse(a *SvgUseAttrs, _ *[]Component) {
	g.Do(&a.GlobalAttrs)
}

// HeightOpt applies to Use
func (o HeightOpt) applyUse(a *SvgUseAttrs, _ *[]Component) {
	a.Height = o.v
}

// HrefOpt applies to Use
func (o HrefOpt) applyUse(a *SvgUseAttrs, _ *[]Component) {
	a.Href = o.v
}

// WidthOpt applies to Use
func (o WidthOpt) applyUse(a *SvgUseAttrs, _ *[]Component) {
	a.Width = o.v
}

// XOpt applies to Use
func (o XOpt) applyUse(a *SvgUseAttrs, _ *[]Component) {
	a.X = o.v
}

// YOpt applies to Use
func (o YOpt) applyUse(a *SvgUseAttrs, _ *[]Component) {
	a.Y = o.v
}

// WriteAttrs writes the SVG attributes to the string builder
func (a *SvgUseAttrs) WriteAttrs(sb *strings.Builder) {
	WriteGlobal(sb, &a.GlobalAttrs)
	if a.Height != "" {
		Attr(sb, "height", a.Height)
	}
	if a.Href != "" {
		Attr(sb, "href", a.Href)
	}
	if a.Width != "" {
		Attr(sb, "width", a.Width)
	}
	if a.X != "" {
		Attr(sb, "x", a.X)
	}
	if a.Y != "" {
		Attr(sb, "y", a.Y)
	}
}
