// Code generated by gen-svg; DO NOT EDIT.

package html

import (
	"strings"
)

// SvgPathAttrs holds the attributes for the path SVG element
type SvgPathAttrs struct {
	GlobalAttrs
	D           string
	FillOpacity string
	PathLength  string
}

// SvgPathArg interface for path element arguments
type SvgPathArg interface {
	applyPath(*SvgPathAttrs, *[]Component)
}

// defaultSvgPathAttrs creates default attributes for path
func defaultSvgPathAttrs() *SvgPathAttrs {
	return &SvgPathAttrs{
		GlobalAttrs: GlobalAttrs{},
	}
}

// SvgPath creates an SVG path element (self-closing)
func SvgPath(args ...SvgPathArg) Node {
	a := defaultSvgPathAttrs()
	var kids []Component
	for _, ar := range args {
		ar.applyPath(a, &kids)
	}
	return Node{
		Tag:   "path",
		Attrs: a,
		Void:  true,
	}
}

// Global applies global SVG attributes to path
func (g Global) applyPath(a *SvgPathAttrs, _ *[]Component) {
	g.Do(&a.GlobalAttrs)
}

// DOpt applies to Path
func (o DOpt) applyPath(a *SvgPathAttrs, _ *[]Component) {
	a.D = o.v
}

// FillOpacityOpt applies to Path
func (o FillOpacityOpt) applyPath(a *SvgPathAttrs, _ *[]Component) {
	a.FillOpacity = o.v
}

// PathLengthOpt applies to Path
func (o PathLengthOpt) applyPath(a *SvgPathAttrs, _ *[]Component) {
	a.PathLength = o.v
}

// WriteAttrs writes the SVG attributes to the string builder
func (a *SvgPathAttrs) WriteAttrs(sb *strings.Builder) {
	WriteGlobal(sb, &a.GlobalAttrs)
	if a.D != "" {
		Attr(sb, "d", a.D)
	}
	if a.FillOpacity != "" {
		Attr(sb, "fill-opacity", a.FillOpacity)
	}
	if a.PathLength != "" {
		Attr(sb, "pathLength", a.PathLength)
	}
}
