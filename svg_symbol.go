// Code generated by gen-svg; DO NOT EDIT.

package html

import (
	"strings"
)

// SymbolAttrs holds the attributes for the symbol SVG element
type SymbolAttrs struct {
	SvgGlobal           SvgGlobalAttrs
	PreserveAspectRatio string
}

// SymbolArg interface for symbol element arguments
type SymbolArg interface {
	ApplySymbol(*SymbolAttrs, *[]html.Component)
}

// defaultSymbolAttrs creates default attributes for symbol
func defaultSymbolAttrs() *SymbolAttrs {
	return &SymbolAttrs{
		SvgGlobal: SvgGlobalAttrs{},
	}
}

// Symbol creates an SVG symbol element
func Symbol(args ...SymbolArg) html.Node {
	a := defaultSymbolAttrs()
	var kids []html.Component
	for _, ar := range args {
		ar.ApplySymbol(a, &kids)
	}
	return html.Node{
		Tag:   "symbol",
		Attrs: a,
		Kids:  kids,
	}
}

// Global applies global SVG attributes to symbol
func (g Global) ApplySymbol(a *SymbolAttrs, _ *[]html.Component) {
	g.do(&a.SvgGlobal)
}

// PreserveAspectRatioOpt applies to Symbol
func (o PreserveAspectRatioOpt) ApplySymbol(a *SymbolAttrs, _ *[]html.Component) {
	a.PreserveAspectRatio = o.v
}

// WriteAttrs writes the SVG attributes to the string builder
func (a *SymbolAttrs) WriteAttrs(sb *strings.Builder) {
	WriteSvgGlobal(sb, &a.SvgGlobal)
	if a.PreserveAspectRatio != "" {
		SvgAttr(sb, "preserveAspectRatio", a.PreserveAspectRatio)
	}
}
