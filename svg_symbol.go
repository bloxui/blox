// Code generated by gen-svg; DO NOT EDIT.

package html

import (
	"strings"
)

// SvgSymbolAttrs holds the attributes for the symbol SVG element
type SvgSymbolAttrs struct {
	GlobalAttrs
	PreserveAspectRatio string
}

// SvgSymbolArg interface for symbol element arguments
type SvgSymbolArg interface {
	applySymbol(*SvgSymbolAttrs, *[]Component)
}

// defaultSvgSymbolAttrs creates default attributes for symbol
func defaultSvgSymbolAttrs() *SvgSymbolAttrs {
	return &SvgSymbolAttrs{
		GlobalAttrs: GlobalAttrs{},
	}
}

// SvgSymbol creates an SVG symbol element
func SvgSymbol(args ...SvgSymbolArg) Node {
	a := defaultSvgSymbolAttrs()
	var kids []Component
	for _, ar := range args {
		ar.applySymbol(a, &kids)
	}
	return Node{
		Tag:   "symbol",
		Attrs: a,
		Kids:  kids,
	}
}

// Global applies global SVG attributes to symbol
func (g Global) applySymbol(a *SvgSymbolAttrs, _ *[]Component) {
	g.Do(&a.GlobalAttrs)
}

// PreserveAspectRatioOpt applies to Symbol
func (o PreserveAspectRatioOpt) applySymbol(a *SvgSymbolAttrs, _ *[]Component) {
	a.PreserveAspectRatio = o.v
}

// WriteAttrs writes the SVG attributes to the string builder
func (a *SvgSymbolAttrs) WriteAttrs(sb *strings.Builder) {
	WriteGlobal(sb, &a.GlobalAttrs)
	if a.PreserveAspectRatio != "" {
		Attr(sb, "preserveAspectRatio", a.PreserveAspectRatio)
	}
}
