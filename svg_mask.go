// Code generated by gen-svg; DO NOT EDIT.

package html

import (
	"strings"
)

// MaskAttrs holds the attributes for the mask SVG element
type MaskAttrs struct {
	SvgGlobal        SvgGlobalAttrs
	Height           string
	MaskContentUnits string
	MaskUnits        string
	Width            string
	X                string
	Y                string
}

// MaskArg interface for mask element arguments
type MaskArg interface {
	ApplyMask(*MaskAttrs, *[]html.Component)
}

// defaultMaskAttrs creates default attributes for mask
func defaultMaskAttrs() *MaskAttrs {
	return &MaskAttrs{
		SvgGlobal: SvgGlobalAttrs{},
	}
}

// Mask creates an SVG mask element
func Mask(args ...MaskArg) html.Node {
	a := defaultMaskAttrs()
	var kids []html.Component
	for _, ar := range args {
		ar.ApplyMask(a, &kids)
	}
	return html.Node{
		Tag:   "mask",
		Attrs: a,
		Kids:  kids,
	}
}

// Global applies global SVG attributes to mask
func (g Global) ApplyMask(a *MaskAttrs, _ *[]html.Component) {
	g.do(&a.SvgGlobal)
}

// HeightOpt applies to Mask
func (o HeightOpt) ApplyMask(a *MaskAttrs, _ *[]html.Component) {
	a.Height = o.v
}

// MaskContentUnitsOpt applies to Mask
func (o MaskContentUnitsOpt) ApplyMask(a *MaskAttrs, _ *[]html.Component) {
	a.MaskContentUnits = o.v
}

// MaskUnitsOpt applies to Mask
func (o MaskUnitsOpt) ApplyMask(a *MaskAttrs, _ *[]html.Component) {
	a.MaskUnits = o.v
}

// WidthOpt applies to Mask
func (o WidthOpt) ApplyMask(a *MaskAttrs, _ *[]html.Component) {
	a.Width = o.v
}

// XOpt applies to Mask
func (o XOpt) ApplyMask(a *MaskAttrs, _ *[]html.Component) {
	a.X = o.v
}

// YOpt applies to Mask
func (o YOpt) ApplyMask(a *MaskAttrs, _ *[]html.Component) {
	a.Y = o.v
}

// WriteAttrs writes the SVG attributes to the string builder
func (a *MaskAttrs) WriteAttrs(sb *strings.Builder) {
	WriteSvgGlobal(sb, &a.SvgGlobal)
	if a.Height != "" {
		SvgAttr(sb, "height", a.Height)
	}
	if a.MaskContentUnits != "" {
		SvgAttr(sb, "maskContentUnits", a.MaskContentUnits)
	}
	if a.MaskUnits != "" {
		SvgAttr(sb, "maskUnits", a.MaskUnits)
	}
	if a.Width != "" {
		SvgAttr(sb, "width", a.Width)
	}
	if a.X != "" {
		SvgAttr(sb, "x", a.X)
	}
	if a.Y != "" {
		SvgAttr(sb, "y", a.Y)
	}
}
