// Code generated by gen-svg; DO NOT EDIT.

package html

import (
	"strings"
)

// SvgRectAttrs holds the attributes for the rect SVG element
type SvgRectAttrs struct {
	GlobalAttrs
	Height string
	Rx     string
	Ry     string
	Width  string
	X      string
	Y      string
}

// SvgRectArg interface for rect element arguments
type SvgRectArg interface {
	applyRect(*SvgRectAttrs, *[]Component)
}

// defaultSvgRectAttrs creates default attributes for rect
func defaultSvgRectAttrs() *SvgRectAttrs {
	return &SvgRectAttrs{
		GlobalAttrs: GlobalAttrs{},
	}
}

// SvgRect creates an SVG rect element (self-closing)
func SvgRect(args ...SvgRectArg) Node {
	a := defaultSvgRectAttrs()
	var kids []Component
	for _, ar := range args {
		ar.applyRect(a, &kids)
	}
	return Node{
		Tag:   "rect",
		Attrs: a,
		Void:  true,
	}
}

// Global applies global SVG attributes to rect
func (g Global) applyRect(a *SvgRectAttrs, _ *[]Component) {
	g.Do(&a.GlobalAttrs)
}

// HeightOpt applies to Rect
func (o HeightOpt) applyRect(a *SvgRectAttrs, _ *[]Component) {
	a.Height = o.v
}

// RxOpt applies to Rect
func (o RxOpt) applyRect(a *SvgRectAttrs, _ *[]Component) {
	a.Rx = o.v
}

// RyOpt applies to Rect
func (o RyOpt) applyRect(a *SvgRectAttrs, _ *[]Component) {
	a.Ry = o.v
}

// WidthOpt applies to Rect
func (o WidthOpt) applyRect(a *SvgRectAttrs, _ *[]Component) {
	a.Width = o.v
}

// XOpt applies to Rect
func (o XOpt) applyRect(a *SvgRectAttrs, _ *[]Component) {
	a.X = o.v
}

// YOpt applies to Rect
func (o YOpt) applyRect(a *SvgRectAttrs, _ *[]Component) {
	a.Y = o.v
}

// WriteAttrs writes the SVG attributes to the string builder
func (a *SvgRectAttrs) WriteAttrs(sb *strings.Builder) {
	WriteGlobal(sb, &a.GlobalAttrs)
	if a.Height != "" {
		Attr(sb, "height", a.Height)
	}
	if a.Rx != "" {
		Attr(sb, "rx", a.Rx)
	}
	if a.Ry != "" {
		Attr(sb, "ry", a.Ry)
	}
	if a.Width != "" {
		Attr(sb, "width", a.Width)
	}
	if a.X != "" {
		Attr(sb, "x", a.X)
	}
	if a.Y != "" {
		Attr(sb, "y", a.Y)
	}
}
